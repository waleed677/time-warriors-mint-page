{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscription,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nexport function bufferToggle(openings, closingSelector) {\n  return function bufferToggleOperatorFunction(source) {\n    return source.lift(new BufferToggleOperator(openings, closingSelector));\n  };\n}\n\nvar BufferToggleOperator = function () {\n  function BufferToggleOperator(openings, closingSelector) {\n    this.openings = openings;\n    this.closingSelector = closingSelector;\n  }\n\n  BufferToggleOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n  };\n\n  return BufferToggleOperator;\n}();\n\nvar BufferToggleSubscriber = function (_super) {\n  tslib_1.__extends(BufferToggleSubscriber, _super);\n\n  function BufferToggleSubscriber(destination, openings, closingSelector) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.closingSelector = closingSelector;\n    _this.contexts = [];\n\n    _this.add(subscribeToResult(_this, openings));\n\n    return _this;\n  }\n\n  BufferToggleSubscriber.prototype._next = function (value) {\n    var contexts = this.contexts;\n    var len = contexts.length;\n\n    for (var i = 0; i < len; i++) {\n      contexts[i].buffer.push(value);\n    }\n  };\n\n  BufferToggleSubscriber.prototype._error = function (err) {\n    var contexts = this.contexts;\n\n    while (contexts.length > 0) {\n      var context_1 = contexts.shift();\n      context_1.subscription.unsubscribe();\n      context_1.buffer = null;\n      context_1.subscription = null;\n    }\n\n    this.contexts = null;\n\n    _super.prototype._error.call(this, err);\n  };\n\n  BufferToggleSubscriber.prototype._complete = function () {\n    var contexts = this.contexts;\n\n    while (contexts.length > 0) {\n      var context_2 = contexts.shift();\n      this.destination.next(context_2.buffer);\n      context_2.subscription.unsubscribe();\n      context_2.buffer = null;\n      context_2.subscription = null;\n    }\n\n    this.contexts = null;\n\n    _super.prototype._complete.call(this);\n  };\n\n  BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue) {\n    outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n  };\n\n  BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {\n    this.closeBuffer(innerSub.context);\n  };\n\n  BufferToggleSubscriber.prototype.openBuffer = function (value) {\n    try {\n      var closingSelector = this.closingSelector;\n      var closingNotifier = closingSelector.call(this, value);\n\n      if (closingNotifier) {\n        this.trySubscribe(closingNotifier);\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  };\n\n  BufferToggleSubscriber.prototype.closeBuffer = function (context) {\n    var contexts = this.contexts;\n\n    if (contexts && context) {\n      var buffer = context.buffer,\n          subscription = context.subscription;\n      this.destination.next(buffer);\n      contexts.splice(contexts.indexOf(context), 1);\n      this.remove(subscription);\n      subscription.unsubscribe();\n    }\n  };\n\n  BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {\n    var contexts = this.contexts;\n    var buffer = [];\n    var subscription = new Subscription();\n    var context = {\n      buffer: buffer,\n      subscription: subscription\n    };\n    contexts.push(context);\n    var innerSubscription = subscribeToResult(this, closingNotifier, context);\n\n    if (!innerSubscription || innerSubscription.closed) {\n      this.closeBuffer(context);\n    } else {\n      innerSubscription.context = context;\n      this.add(innerSubscription);\n      subscription.add(innerSubscription);\n    }\n  };\n\n  return BufferToggleSubscriber;\n}(OuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/bufferToggle.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscription,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Subscription } from '../Subscription';\r\nimport { subscribeToResult } from '../util/subscribeToResult';\r\nimport { OuterSubscriber } from '../OuterSubscriber';\r\nexport function bufferToggle(openings, closingSelector) {\r\n    return function bufferToggleOperatorFunction(source) {\r\n        return source.lift(new BufferToggleOperator(openings, closingSelector));\r\n    };\r\n}\r\nvar BufferToggleOperator = /*@__PURE__*/ (function () {\r\n    function BufferToggleOperator(openings, closingSelector) {\r\n        this.openings = openings;\r\n        this.closingSelector = closingSelector;\r\n    }\r\n    BufferToggleOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\r\n    };\r\n    return BufferToggleOperator;\r\n}());\r\nvar BufferToggleSubscriber = /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(BufferToggleSubscriber, _super);\r\n    function BufferToggleSubscriber(destination, openings, closingSelector) {\r\n        var _this = _super.call(this, destination) || this;\r\n        _this.closingSelector = closingSelector;\r\n        _this.contexts = [];\r\n        _this.add(subscribeToResult(_this, openings));\r\n        return _this;\r\n    }\r\n    BufferToggleSubscriber.prototype._next = function (value) {\r\n        var contexts = this.contexts;\r\n        var len = contexts.length;\r\n        for (var i = 0; i < len; i++) {\r\n            contexts[i].buffer.push(value);\r\n        }\r\n    };\r\n    BufferToggleSubscriber.prototype._error = function (err) {\r\n        var contexts = this.contexts;\r\n        while (contexts.length > 0) {\r\n            var context_1 = contexts.shift();\r\n            context_1.subscription.unsubscribe();\r\n            context_1.buffer = null;\r\n            context_1.subscription = null;\r\n        }\r\n        this.contexts = null;\r\n        _super.prototype._error.call(this, err);\r\n    };\r\n    BufferToggleSubscriber.prototype._complete = function () {\r\n        var contexts = this.contexts;\r\n        while (contexts.length > 0) {\r\n            var context_2 = contexts.shift();\r\n            this.destination.next(context_2.buffer);\r\n            context_2.subscription.unsubscribe();\r\n            context_2.buffer = null;\r\n            context_2.subscription = null;\r\n        }\r\n        this.contexts = null;\r\n        _super.prototype._complete.call(this);\r\n    };\r\n    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue) {\r\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\r\n    };\r\n    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {\r\n        this.closeBuffer(innerSub.context);\r\n    };\r\n    BufferToggleSubscriber.prototype.openBuffer = function (value) {\r\n        try {\r\n            var closingSelector = this.closingSelector;\r\n            var closingNotifier = closingSelector.call(this, value);\r\n            if (closingNotifier) {\r\n                this.trySubscribe(closingNotifier);\r\n            }\r\n        }\r\n        catch (err) {\r\n            this._error(err);\r\n        }\r\n    };\r\n    BufferToggleSubscriber.prototype.closeBuffer = function (context) {\r\n        var contexts = this.contexts;\r\n        if (contexts && context) {\r\n            var buffer = context.buffer, subscription = context.subscription;\r\n            this.destination.next(buffer);\r\n            contexts.splice(contexts.indexOf(context), 1);\r\n            this.remove(subscription);\r\n            subscription.unsubscribe();\r\n        }\r\n    };\r\n    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {\r\n        var contexts = this.contexts;\r\n        var buffer = [];\r\n        var subscription = new Subscription();\r\n        var context = { buffer: buffer, subscription: subscription };\r\n        contexts.push(context);\r\n        var innerSubscription = subscribeToResult(this, closingNotifier, context);\r\n        if (!innerSubscription || innerSubscription.closed) {\r\n            this.closeBuffer(context);\r\n        }\r\n        else {\r\n            innerSubscription.context = context;\r\n            this.add(innerSubscription);\r\n            subscription.add(innerSubscription);\r\n        }\r\n    };\r\n    return BufferToggleSubscriber;\r\n}(OuterSubscriber));\r\n//# sourceMappingURL=bufferToggle.js.map\r\n"]},"metadata":{},"sourceType":"module"}