{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { empty } from '../observable/empty';\nexport function repeat(count) {\n  if (count === void 0) {\n    count = -1;\n  }\n\n  return function (source) {\n    if (count === 0) {\n      return empty();\n    } else if (count < 0) {\n      return source.lift(new RepeatOperator(-1, source));\n    } else {\n      return source.lift(new RepeatOperator(count - 1, source));\n    }\n  };\n}\n\nvar RepeatOperator = function () {\n  function RepeatOperator(count, source) {\n    this.count = count;\n    this.source = source;\n  }\n\n  RepeatOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n  };\n\n  return RepeatOperator;\n}();\n\nvar RepeatSubscriber = function (_super) {\n  tslib_1.__extends(RepeatSubscriber, _super);\n\n  function RepeatSubscriber(destination, count, source) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.count = count;\n    _this.source = source;\n    return _this;\n  }\n\n  RepeatSubscriber.prototype.complete = function () {\n    if (!this.isStopped) {\n      var _a = this,\n          source = _a.source,\n          count = _a.count;\n\n      if (count === 0) {\n        return _super.prototype.complete.call(this);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  };\n\n  return RepeatSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/repeat.ts"],"names":[],"mappings":";AACA,OAAO,KAAE,OAAT,MAAqB,OAArB;AAEA,SAAS,UAAT,QAAsB,eAAtB;AA2DA,SAAM,KAAN,QAAsB,qBAAtB;AAA0B,OAAA,SAAA,MAAA,CAAA,KAAA,EAAA;AACxB,MAAA,KAAO,KAAA,KAAC,CAAR,EAAQ;AACN,IAAA,KAAI,GAAA,CAAK,CAAT;AACE;;AACD,SAAA,UAAA,MAAA,EAAA;QAAM,KAAI,KAAK,C,EAAG;AACjB,aAAO,KAAA,EAAP;AACD,K,MAAM,IAAA,KAAA,GAAA,CAAA,EAAA;AACL,aAAO,MAAM,CAAC,IAAP,CAAY,IAAI,cAAJ,CAAmB,CAAA,CAAnB,EAAmB,MAAnB,CAAZ,CAAP;AACD,KAFM,MAGP;AACH,aAAA,MAAA,CAAA,IAAA,CAAA,IAAA,cAAA,CAAA,KAAA,GAAA,CAAA,EAAA,MAAA,CAAA,CAAA;AAED;AACE,GATG;AASiB;;IACA,cAAA,GAAqB,YAAA;AACzC,WAAC,cAAD,CAAC,KAAD,EAAC,MAAD,EAAC;AACD,SAAA,KAAA,GAAA,KAAA;AACE,SAAA,MAAA,GAAc,MAAd;AACD;;AACH,EAAA,cAAA,CAAA,SAAA,CAAC,IAAD,GAAC,UAAA,UAAA,EAAA,MAAA,EAAA;AAAA,WAAA,MAAA,CAAA,SAAA,CAAA,IAAA,gBAAA,CAAA,UAAA,EAAA,KAAA,KAAA,EAAA,KAAA,MAAA,CAAA,CAAA;AAOD,GAPA;;AAOkC,SAAA,cAAA;AAChC,CAbyC,E;;IAazC,gBAGE,GAAM,UAAA,MAAA,EAAY;AAFA,EAAA,OAAA,CAAA,SAAA,CAAA,gBAAA,EAAa,MAAb;;AACA,WAAA,gBAAA,CAAqB,WAArB,EAAqB,KAArB,EAAqB,MAArB,EAAqB;;;AAExC,IAAA,KAAA,CAAA,KAAA,GAAA,KAAA;AACD,IAAA,KAAA,CAAA,MAAA,GAAA,MAAA;AACE,WAAK,KAAL;AACQ;;AACN,EAAA,gBAAI,CAAK,SAAT,CAAiB,QAAjB,GAAiB,YAAA;SACf,KAAA,S,EAAO;AACR,UAAA,EAAA,GAAA,IAAA;AAAA,UAAA,MAAA,GAAA,EAAA,CAAA,MAAA;AAAA,UAAA,KAAA,GAAA,EAAA,CAAA,KAAA;;UAAM,KAAI,KAAK,C,EAAG;AACjB,eAAK,MAAQ,CAAA,SAAR,CAAkB,QAAlB,CAAkB,IAAlB,CAAkB,IAAlB,CAAL;AACD,O,MACD,IAAO,KAAA,GAAU,CAAA,CAAjB,EAAqB;AACtB,aAAA,KAAA,GAAA,KAAA,GAAA,CAAA;AACF;;AACH,MAAA,MAAA,CAAA,SAAA,CAAC,KAAA,sBAAA,EAAD;AAjBkC;GAS5B;;;CALI,C,UAAA,C","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber,_observable_empty PURE_IMPORTS_END */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Subscriber } from '../Subscriber';\r\nimport { empty } from '../observable/empty';\r\nexport function repeat(count) {\r\n    if (count === void 0) {\r\n        count = -1;\r\n    }\r\n    return function (source) {\r\n        if (count === 0) {\r\n            return empty();\r\n        }\r\n        else if (count < 0) {\r\n            return source.lift(new RepeatOperator(-1, source));\r\n        }\r\n        else {\r\n            return source.lift(new RepeatOperator(count - 1, source));\r\n        }\r\n    };\r\n}\r\nvar RepeatOperator = /*@__PURE__*/ (function () {\r\n    function RepeatOperator(count, source) {\r\n        this.count = count;\r\n        this.source = source;\r\n    }\r\n    RepeatOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\r\n    };\r\n    return RepeatOperator;\r\n}());\r\nvar RepeatSubscriber = /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(RepeatSubscriber, _super);\r\n    function RepeatSubscriber(destination, count, source) {\r\n        var _this = _super.call(this, destination) || this;\r\n        _this.count = count;\r\n        _this.source = source;\r\n        return _this;\r\n    }\r\n    RepeatSubscriber.prototype.complete = function () {\r\n        if (!this.isStopped) {\r\n            var _a = this, source = _a.source, count = _a.count;\r\n            if (count === 0) {\r\n                return _super.prototype.complete.call(this);\r\n            }\r\n            else if (count > -1) {\r\n                this.count = count - 1;\r\n            }\r\n            source.subscribe(this._unsubscribeAndRecycle());\r\n        }\r\n    };\r\n    return RepeatSubscriber;\r\n}(Subscriber));\r\n//# sourceMappingURL=repeat.js.map\r\n"]},"metadata":{},"sourceType":"module"}