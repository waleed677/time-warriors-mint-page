{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport Semaphore from './Semaphore';\n\nvar Mutex = function () {\n  function Mutex() {\n    this._semaphore = new Semaphore(1);\n  }\n\n  Mutex.prototype.acquire = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, releaser;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._semaphore.acquire()];\n\n          case 1:\n            _a = _b.sent(), releaser = _a[1];\n            return [2\n            /*return*/\n            , releaser];\n        }\n      });\n    });\n  };\n\n  Mutex.prototype.runExclusive = function (callback) {\n    return this._semaphore.runExclusive(function () {\n      return callback();\n    });\n  };\n\n  Mutex.prototype.isLocked = function () {\n    return this._semaphore.isLocked();\n  };\n\n  Mutex.prototype.release = function () {\n    this._semaphore.release();\n  };\n\n  return Mutex;\n}();\n\nexport default Mutex;","map":{"version":3,"sources":["E:/Freelancing/blockchain/time-warriors-mint-page/node_modules/async-mutex/es6/Mutex.js"],"names":["__awaiter","__generator","Semaphore","Mutex","_semaphore","prototype","acquire","_a","releaser","_b","label","sent","runExclusive","callback","isLocked","release"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,QAAuC,OAAvC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AACA,IAAIC,KAAK,GAAkB,YAAY;AACnC,WAASA,KAAT,GAAiB;AACb,SAAKC,UAAL,GAAkB,IAAIF,SAAJ,CAAc,CAAd,CAAlB;AACH;;AACDC,EAAAA,KAAK,CAACE,SAAN,CAAgBC,OAAhB,GAA0B,YAAY;AAClC,WAAON,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;AAC/C,UAAIO,EAAJ,EAAQC,QAAR;;AACA,aAAOP,WAAW,CAAC,IAAD,EAAO,UAAUQ,EAAV,EAAc;AACnC,gBAAQA,EAAE,CAACC,KAAX;AACI,eAAK,CAAL;AAAQ,mBAAO,CAAC;AAAE;AAAH,cAAc,KAAKN,UAAL,CAAgBE,OAAhB,EAAd,CAAP;;AACR,eAAK,CAAL;AACIC,YAAAA,EAAE,GAAGE,EAAE,CAACE,IAAH,EAAL,EAAgBH,QAAQ,GAAGD,EAAE,CAAC,CAAD,CAA7B;AACA,mBAAO,CAAC;AAAE;AAAH,cAAeC,QAAf,CAAP;AAJR;AAMH,OAPiB,CAAlB;AAQH,KAVe,CAAhB;AAWH,GAZD;;AAaAL,EAAAA,KAAK,CAACE,SAAN,CAAgBO,YAAhB,GAA+B,UAAUC,QAAV,EAAoB;AAC/C,WAAO,KAAKT,UAAL,CAAgBQ,YAAhB,CAA6B,YAAY;AAAE,aAAOC,QAAQ,EAAf;AAAoB,KAA/D,CAAP;AACH,GAFD;;AAGAV,EAAAA,KAAK,CAACE,SAAN,CAAgBS,QAAhB,GAA2B,YAAY;AACnC,WAAO,KAAKV,UAAL,CAAgBU,QAAhB,EAAP;AACH,GAFD;;AAGAX,EAAAA,KAAK,CAACE,SAAN,CAAgBU,OAAhB,GAA0B,YAAY;AAClC,SAAKX,UAAL,CAAgBW,OAAhB;AACH,GAFD;;AAGA,SAAOZ,KAAP;AACH,CA3B0B,EAA3B;;AA4BA,eAAeA,KAAf","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\r\nimport Semaphore from './Semaphore';\r\nvar Mutex = /** @class */ (function () {\r\n    function Mutex() {\r\n        this._semaphore = new Semaphore(1);\r\n    }\r\n    Mutex.prototype.acquire = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, releaser;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this._semaphore.acquire()];\r\n                    case 1:\r\n                        _a = _b.sent(), releaser = _a[1];\r\n                        return [2 /*return*/, releaser];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Mutex.prototype.runExclusive = function (callback) {\r\n        return this._semaphore.runExclusive(function () { return callback(); });\r\n    };\r\n    Mutex.prototype.isLocked = function () {\r\n        return this._semaphore.isLocked();\r\n    };\r\n    Mutex.prototype.release = function () {\r\n        this._semaphore.release();\r\n    };\r\n    return Mutex;\r\n}());\r\nexport default Mutex;\r\n"]},"metadata":{},"sourceType":"module"}