{"ast":null,"code":"var _jsxFileName = \"E:\\\\Freelancing\\\\blockchain\\\\time-warriors-mint-page\\\\src\\\\components\\\\Navbar\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { connect } from \"../../redux/blockchain/blockchainActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchData } from \"../../redux/data/dataActions\";\nimport { Link } from \"react-scroll\";\nimport { Nav, NavLogo, NavContainer, MobileIcon, NavMenu, NavItems, NavLink, StyledButton, StyledButtonMobile, NavIcon } from \"./Navbar.element\";\nimport { FaBars, FaTimes } from \"react-icons/fa\";\nimport { animateScroll as scroll } from \"react-scroll\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const [scrollNav, setScrollNav] = useState(false);\n\n  const changeNav = () => {\n    if (window.scrollY >= 100) {\n      setScrollNav(true);\n    } else {\n      setScrollNav(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", changeNav);\n  }, []);\n  const dispatch = useDispatch();\n  const blockchain = useSelector(state => state.blockchain);\n  const data = useSelector(state => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false\n  });\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n  const [click, setClick] = useState(false);\n\n  const handleClick = () => setClick(!click);\n\n  const toggleHome = () => {\n    scroll.scrollToTop();\n  };\n\n  const socialMedia = url => {\n    window.location.href = url;\n  };\n\n  const homeLink = () => {\n    window.location.replace(\"https://jokecommunity.io/\");\n  };\n\n  const openSea = () => {\n    window.location.replace(\"https://opensea.io/collection/metaversessecret\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Nav, {\n      scrollNav: scrollNav,\n      children: /*#__PURE__*/_jsxDEV(NavContainer, {\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"\",\n          children: /*#__PURE__*/_jsxDEV(NavLogo, {\n            alt: \"logo\",\n            src: \"config/images/logo.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Navbar, \"gF1tGpslV0GI+eunZzmvHu3fSsY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["E:/Freelancing/blockchain/time-warriors-mint-page/src/components/Navbar/Navbar.js"],"names":["React","useEffect","useState","useRef","connect","useDispatch","useSelector","fetchData","Link","Nav","NavLogo","NavContainer","MobileIcon","NavMenu","NavItems","NavLink","StyledButton","StyledButtonMobile","NavIcon","FaBars","FaTimes","animateScroll","scroll","Navbar","scrollNav","setScrollNav","changeNav","window","scrollY","addEventListener","dispatch","blockchain","state","data","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONFIG","SET_CONFIG","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","getData","account","smartContract","getConfig","configResponse","fetch","headers","Accept","config","json","click","setClick","handleClick","toggleHome","scrollToTop","socialMedia","url","location","href","homeLink","replace","openSea"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { connect } from \"../../redux/blockchain/blockchainActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchData } from \"../../redux/data/dataActions\";\r\nimport { Link } from \"react-scroll\";\r\nimport {\r\n  Nav,\r\n  NavLogo,\r\n  NavContainer,\r\n  MobileIcon,\r\n  NavMenu,\r\n  NavItems,\r\n  NavLink,\r\n  StyledButton,\r\n  StyledButtonMobile,\r\n  NavIcon,\r\n} from \"./Navbar.element\";\r\nimport { FaBars, FaTimes } from \"react-icons/fa\";\r\n\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nconst Navbar = () => {\r\n  const [scrollNav, setScrollNav] = useState(false);\r\n  const changeNav = () => {\r\n    if (window.scrollY >= 100) {\r\n      setScrollNav(true);\r\n    } else {\r\n      setScrollNav(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", changeNav);\r\n  }, []);\r\n\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\r\n  const [mintAmount, setMintAmount] = useState(1);\r\n  const [CONFIG, SET_CONFIG] = useState({\r\n    CONTRACT_ADDRESS: \"\",\r\n    SCAN_LINK: \"\",\r\n    NETWORK: {\r\n      NAME: \"\",\r\n      SYMBOL: \"\",\r\n      ID: 0,\r\n    },\r\n    NFT_NAME: \"\",\r\n    SYMBOL: \"\",\r\n    MAX_SUPPLY: 1,\r\n    WEI_COST: 0,\r\n    DISPLAY_COST: 0,\r\n    GAS_LIMIT: 0,\r\n    MARKETPLACE: \"\",\r\n    MARKETPLACE_LINK: \"\",\r\n    SHOW_BACKGROUND: false,\r\n  });\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  const getConfig = async () => {\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const config = await configResponse.json();\r\n    SET_CONFIG(config);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getConfig();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n  const [click, setClick] = useState(false);\r\n  const handleClick = () => setClick(!click);\r\n\r\n  const toggleHome = () => {\r\n    scroll.scrollToTop();\r\n  };\r\n\r\n  const socialMedia = (url) => {\r\n    window.location.href = url;\r\n  };\r\n\r\n  const homeLink = () => {\r\n    window.location.replace(\"https://jokecommunity.io/\");\r\n  };\r\n\r\n  const openSea = () => {\r\n    window.location.replace(\"https://opensea.io/collection/metaversessecret\");\r\n  };\r\n  return (\r\n    <>\r\n      <Nav scrollNav={scrollNav}>\r\n        <NavContainer>\r\n        <NavLink to=\"\">\r\n                <NavLogo alt={\"logo\"} src={\"config/images/logo.png\"} ></NavLogo>\r\n            </NavLink>\r\n          \r\n\r\n          {/* <MobileIcon onClick={handleClick}>\r\n            {click ? <FaTimes /> : <FaBars />}\r\n          </MobileIcon> */}\r\n        </NavContainer>\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}