{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscription,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from '../Subscription';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function bufferWhen(closingSelector) {\n  return function (source) {\n    return source.lift(new BufferWhenOperator(closingSelector));\n  };\n}\n\nvar BufferWhenOperator = function () {\n  function BufferWhenOperator(closingSelector) {\n    this.closingSelector = closingSelector;\n  }\n\n  BufferWhenOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n  };\n\n  return BufferWhenOperator;\n}();\n\nvar BufferWhenSubscriber = function (_super) {\n  tslib_1.__extends(BufferWhenSubscriber, _super);\n\n  function BufferWhenSubscriber(destination, closingSelector) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.closingSelector = closingSelector;\n    _this.subscribing = false;\n\n    _this.openBuffer();\n\n    return _this;\n  }\n\n  BufferWhenSubscriber.prototype._next = function (value) {\n    this.buffer.push(value);\n  };\n\n  BufferWhenSubscriber.prototype._complete = function () {\n    var buffer = this.buffer;\n\n    if (buffer) {\n      this.destination.next(buffer);\n    }\n\n    _super.prototype._complete.call(this);\n  };\n\n  BufferWhenSubscriber.prototype._unsubscribe = function () {\n    this.buffer = undefined;\n    this.subscribing = false;\n  };\n\n  BufferWhenSubscriber.prototype.notifyNext = function () {\n    this.openBuffer();\n  };\n\n  BufferWhenSubscriber.prototype.notifyComplete = function () {\n    if (this.subscribing) {\n      this.complete();\n    } else {\n      this.openBuffer();\n    }\n  };\n\n  BufferWhenSubscriber.prototype.openBuffer = function () {\n    var closingSubscription = this.closingSubscription;\n\n    if (closingSubscription) {\n      this.remove(closingSubscription);\n      closingSubscription.unsubscribe();\n    }\n\n    var buffer = this.buffer;\n\n    if (this.buffer) {\n      this.destination.next(buffer);\n    }\n\n    this.buffer = [];\n    var closingNotifier;\n\n    try {\n      var closingSelector = this.closingSelector;\n      closingNotifier = closingSelector();\n    } catch (err) {\n      return this.error(err);\n    }\n\n    closingSubscription = new Subscription();\n    this.closingSubscription = closingSubscription;\n    this.add(closingSubscription);\n    this.subscribing = true;\n    closingSubscription.add(innerSubscribe(closingNotifier, new SimpleInnerSubscriber(this)));\n    this.subscribing = false;\n  };\n\n  return BufferWhenSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/bufferWhen.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscription,_innerSubscribe PURE_IMPORTS_END */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Subscription } from '../Subscription';\r\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\r\nexport function bufferWhen(closingSelector) {\r\n    return function (source) {\r\n        return source.lift(new BufferWhenOperator(closingSelector));\r\n    };\r\n}\r\nvar BufferWhenOperator = /*@__PURE__*/ (function () {\r\n    function BufferWhenOperator(closingSelector) {\r\n        this.closingSelector = closingSelector;\r\n    }\r\n    BufferWhenOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\r\n    };\r\n    return BufferWhenOperator;\r\n}());\r\nvar BufferWhenSubscriber = /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(BufferWhenSubscriber, _super);\r\n    function BufferWhenSubscriber(destination, closingSelector) {\r\n        var _this = _super.call(this, destination) || this;\r\n        _this.closingSelector = closingSelector;\r\n        _this.subscribing = false;\r\n        _this.openBuffer();\r\n        return _this;\r\n    }\r\n    BufferWhenSubscriber.prototype._next = function (value) {\r\n        this.buffer.push(value);\r\n    };\r\n    BufferWhenSubscriber.prototype._complete = function () {\r\n        var buffer = this.buffer;\r\n        if (buffer) {\r\n            this.destination.next(buffer);\r\n        }\r\n        _super.prototype._complete.call(this);\r\n    };\r\n    BufferWhenSubscriber.prototype._unsubscribe = function () {\r\n        this.buffer = undefined;\r\n        this.subscribing = false;\r\n    };\r\n    BufferWhenSubscriber.prototype.notifyNext = function () {\r\n        this.openBuffer();\r\n    };\r\n    BufferWhenSubscriber.prototype.notifyComplete = function () {\r\n        if (this.subscribing) {\r\n            this.complete();\r\n        }\r\n        else {\r\n            this.openBuffer();\r\n        }\r\n    };\r\n    BufferWhenSubscriber.prototype.openBuffer = function () {\r\n        var closingSubscription = this.closingSubscription;\r\n        if (closingSubscription) {\r\n            this.remove(closingSubscription);\r\n            closingSubscription.unsubscribe();\r\n        }\r\n        var buffer = this.buffer;\r\n        if (this.buffer) {\r\n            this.destination.next(buffer);\r\n        }\r\n        this.buffer = [];\r\n        var closingNotifier;\r\n        try {\r\n            var closingSelector = this.closingSelector;\r\n            closingNotifier = closingSelector();\r\n        }\r\n        catch (err) {\r\n            return this.error(err);\r\n        }\r\n        closingSubscription = new Subscription();\r\n        this.closingSubscription = closingSubscription;\r\n        this.add(closingSubscription);\r\n        this.subscribing = true;\r\n        closingSubscription.add(innerSubscribe(closingNotifier, new SimpleInnerSubscriber(this)));\r\n        this.subscribing = false;\r\n    };\r\n    return BufferWhenSubscriber;\r\n}(SimpleOuterSubscriber));\r\n//# sourceMappingURL=bufferWhen.js.map\r\n"]},"metadata":{},"sourceType":"module"}