{"ast":null,"code":"const EventEmitter = require('events').EventEmitter;\n\nconst inherits = require('util').inherits;\n\nmodule.exports = Stoplight;\ninherits(Stoplight, EventEmitter);\n\nfunction Stoplight() {\n  const self = this;\n  EventEmitter.call(self);\n  self.isLocked = true;\n}\n\nStoplight.prototype.go = function () {\n  const self = this;\n  self.isLocked = false;\n  self.emit('unlock');\n};\n\nStoplight.prototype.stop = function () {\n  const self = this;\n  self.isLocked = true;\n  self.emit('lock');\n};\n\nStoplight.prototype.await = function (fn) {\n  const self = this;\n\n  if (self.isLocked) {\n    self.once('unlock', fn);\n  } else {\n    setTimeout(fn);\n  }\n};","map":{"version":3,"sources":["E:/Freelancing/blockchain/time-warriors-mint-page/node_modules/web3-provider-engine/util/stoplight.js"],"names":["EventEmitter","require","inherits","module","exports","Stoplight","self","call","isLocked","prototype","go","emit","stop","await","fn","once","setTimeout"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,YAAvC;;AACA,MAAME,QAAQ,GAAGD,OAAO,CAAC,MAAD,CAAP,CAAgBC,QAAjC;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,SAAjB;AAGAH,QAAQ,CAACG,SAAD,EAAYL,YAAZ,CAAR;;AAEA,SAASK,SAAT,GAAoB;AAClB,QAAMC,IAAI,GAAG,IAAb;AACAN,EAAAA,YAAY,CAACO,IAAb,CAAkBD,IAAlB;AACAA,EAAAA,IAAI,CAACE,QAAL,GAAgB,IAAhB;AACD;;AAEDH,SAAS,CAACI,SAAV,CAAoBC,EAApB,GAAyB,YAAU;AACjC,QAAMJ,IAAI,GAAG,IAAb;AACAA,EAAAA,IAAI,CAACE,QAAL,GAAgB,KAAhB;AACAF,EAAAA,IAAI,CAACK,IAAL,CAAU,QAAV;AACD,CAJD;;AAMAN,SAAS,CAACI,SAAV,CAAoBG,IAApB,GAA2B,YAAU;AACnC,QAAMN,IAAI,GAAG,IAAb;AACAA,EAAAA,IAAI,CAACE,QAAL,GAAgB,IAAhB;AACAF,EAAAA,IAAI,CAACK,IAAL,CAAU,MAAV;AACD,CAJD;;AAMAN,SAAS,CAACI,SAAV,CAAoBI,KAApB,GAA4B,UAASC,EAAT,EAAY;AACtC,QAAMR,IAAI,GAAG,IAAb;;AACA,MAAIA,IAAI,CAACE,QAAT,EAAmB;AACjBF,IAAAA,IAAI,CAACS,IAAL,CAAU,QAAV,EAAoBD,EAApB;AACD,GAFD,MAEO;AACLE,IAAAA,UAAU,CAACF,EAAD,CAAV;AACD;AACF,CAPD","sourcesContent":["const EventEmitter = require('events').EventEmitter\r\nconst inherits = require('util').inherits\r\n\r\nmodule.exports = Stoplight\r\n\r\n\r\ninherits(Stoplight, EventEmitter)\r\n\r\nfunction Stoplight(){\r\n  const self = this\r\n  EventEmitter.call(self)\r\n  self.isLocked = true\r\n}\r\n\r\nStoplight.prototype.go = function(){\r\n  const self = this\r\n  self.isLocked = false\r\n  self.emit('unlock')\r\n}\r\n\r\nStoplight.prototype.stop = function(){\r\n  const self = this\r\n  self.isLocked = true\r\n  self.emit('lock')\r\n}\r\n\r\nStoplight.prototype.await = function(fn){\r\n  const self = this\r\n  if (self.isLocked) {\r\n    self.once('unlock', fn)\r\n  } else {\r\n    setTimeout(fn)\r\n  }\r\n}"]},"metadata":{},"sourceType":"script"}