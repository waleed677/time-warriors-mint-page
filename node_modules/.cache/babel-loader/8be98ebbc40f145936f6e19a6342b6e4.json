{"ast":null,"code":"var _jsxFileName = \"/home/waleed/Desktop/MintWebsites/metaverse/src/pages/HomePage/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"../../redux/blockchain/blockchainActions\";\nimport { connectWallet } from \"../../redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./../../redux/data/dataActions\";\nimport * as s from \"./../../styles/globalStyles\";\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport Social from \"../../components/SocialMedia/Social\";\nimport Loader from \"../../components/Loader/loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst {\n  createAlchemyWeb3,\n  ethers\n} = require(\"@alch/alchemy-web3\");\n\nvar Web3 = require('web3');\n\nvar Contract = require('web3-eth-contract');\n\nfunction Home() {\n  _s();\n\n  let cost = 0.00;\n  const dispatch = useDispatch();\n  const blockchain = useSelector(state => state.blockchain);\n  const data = useSelector(state => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [mintDone, setMintDone] = useState(false);\n  const [supply, setTotalSupply] = useState(0);\n  const [feedback, setFeedback] = useState(\"\");\n  const [mintAmount, setMintAmount] = useState(1);\n  const [displayCost, setDisplayCost] = useState(cost);\n  const [state, setState] = useState(-1);\n  const [canMintWL, setCanMintWL] = useState(false);\n  const [disable, setDisable] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [nftCost, setNftCost] = useState(-1);\n  const [statusAlert, setStatusAlert] = useState(\"\");\n  const [max, setMax] = useState(0);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false\n  });\n\n  const claimNFTs = () => {\n    let cost = nftCost;\n    cost = Web3.utils.toWei(String(cost), \"ether\");\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}`);\n    setClaimingNft(true);\n    setDisable(true);\n    blockchain.smartContract.methods.mint(mintAmount).send({\n      gasLimit: String(totalGasLimit),\n      to: CONFIG.CONTRACT_ADDRESS,\n      from: blockchain.account,\n      value: totalCostWei\n    }).once(\"error\", err => {\n      console.log(err);\n      setFeedback(\"Sorry, something went wrong please try again later.\");\n      setClaimingNft(false);\n    }).then(receipt => {\n      setMintDone(true);\n      setFeedback(`Congratulation, your mint is successful.`);\n      setClaimingNft(false);\n      blockchain.smartContract.methods.totalSupply().call().then(res => {\n        setTotalSupply(res);\n      });\n      dispatch(fetchData(blockchain.account));\n    });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n\n    setMintAmount(newMintAmount);\n    setDisplayCost(parseFloat(nftCost * newMintAmount).toFixed(2));\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    newMintAmount > max ? newMintAmount = max : newMintAmount;\n    setDisplayCost(parseFloat(nftCost * newMintAmount).toFixed(2));\n    setMintAmount(newMintAmount);\n  };\n\n  const maxNfts = () => {\n    setMintAmount(max);\n    setDisplayCost(parseFloat(nftCost * max).toFixed(2));\n  };\n\n  const getData = async () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n\n      if (state == 1) {\n        let mintWL = await blockchain.smartContract.methods.isWhitelisted(blockchain.account).call();\n        console.log({\n          mintWL\n        });\n        setCanMintWL(mintWL);\n        mintWL ? \"\" : setFeedback(`Sorry, your wallet is not on the whitelist`);\n        mintWL ? setDisable(false) : setDisable(true);\n      }\n    }\n  };\n\n  const getDataWithAlchemy = async () => {\n    const web3 = createAlchemyWeb3(\"https://eth-rinkeby.alchemyapi.io/v2/r6eG6CaBZCKMgr9n_LtLiBdruY9DwF_v\");\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    });\n    const abi = await abiResponse.json();\n    var contract = new Contract(abi, '0xE4B000466c79C01235F912EDFc275a8105B2B360');\n    contract.setProvider(web3.currentProvider); // Get Total Supply\n\n    const totalSupply = await contract.methods.totalSupply().call();\n    setTotalSupply(totalSupply); // Get Contract State\n\n    let currentState = await contract.methods.currentState().call();\n    setState(currentState);\n    console.log(currentState); // Set Price and Max According to State\n\n    if (currentState == 0) {\n      setStatusAlert(\"MINT NOT LIVE YET!\");\n      setDisable(true);\n      setDisplayCost(0.00);\n      setMax(0);\n    } else if (currentState == 1) {\n      let wlCost = await contract.methods.costWL().call();\n      setDisplayCost(web3.utils.fromWei(wlCost));\n      setNftCost(web3.utils.fromWei(wlCost));\n      setStatusAlert(\"WHITELIST IS NOW LIVE!\");\n      setFeedback(\"Are you Whitelisted Member?\");\n      let wlMax = await contract.methods.maxMintAmount().call();\n      setMax(wlMax);\n    } else {\n      let puCost = await contract.methods.cost().call();\n      setDisplayCost(web3.utils.fromWei(puCost));\n      setNftCost(web3.utils.fromWei(puCost));\n      setStatusAlert(\"Public Mint is Live\");\n      let puMax = await contract.methods.maxMintAmount().call();\n      setMax(puMax);\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n    getDataWithAlchemy();\n    setTimeout(() => {\n      setLoading(false);\n    }, 1500);\n  }, []);\n  useEffect(() => {\n    addEventListener;\n    getData();\n  }, [blockchain.account]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(s.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.FlexContainer, {\n        jc: \"space-between\",\n        ai: \"center\",\n        fd: \"row\",\n        mt: \"25vh\",\n        children: [/*#__PURE__*/_jsxDEV(s.Image, {\n          src: \"config/images/1.png\",\n          wid: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(s.Mint, {\n          children: [/*#__PURE__*/_jsxDEV(s.TextTitle, {\n            color: \"#fff\",\n            size: 4.0,\n            style: {\n              letterSpacing: \"3px\"\n            },\n            children: statusAlert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.SpacerSmall, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.TextSubTitle, {\n            size: 1.8,\n            children: [CONFIG.MAX_SUPPLY - supply, \" of \", CONFIG.MAX_SUPPLY, \"   NFT's Available\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.SpacerLarge, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.SpacerLarge, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.FlexContainer, {\n            fd: \"row\",\n            ai: \"center\",\n            jc: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(s.TextTitle, {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(s.AmountContainer, {\n              ai: \"center\",\n              jc: \"center\",\n              fd: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(s.StyledRoundButton, {\n                style: {\n                  lineHeight: 0.4\n                },\n                disabled: claimingNft ? 1 : 0,\n                onClick: e => {\n                  e.preventDefault();\n                  decrementMintAmount();\n                },\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(s.SpacerMedium, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(s.TextDescription, {\n                color: \"var(--primary)\",\n                size: \"2.5rem\",\n                children: mintAmount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(s.SpacerMedium, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(s.StyledRoundButton, {\n                disabled: claimingNft ? 1 : 0,\n                onClick: e => {\n                  e.preventDefault();\n                  incrementMintAmount();\n                },\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(s.maxButton, {\n              style: {\n                cursor: \"pointer\"\n              },\n              onClick: e => {\n                e.preventDefault();\n                maxNfts();\n              },\n              children: \"MAX\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.SpacerSmall, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.Line, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.SpacerLarge, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.FlexContainer, {\n            fd: \"row\",\n            ai: \"center\",\n            jc: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(s.TextTitle, {\n              children: \"Total Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(s.TextTitle, {\n              color: \"var(--primary)\",\n              children: displayCost\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.SpacerSmall, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.Line, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.SpacerSmall, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.SpacerLarge, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), blockchain.account !== \"\" && blockchain.smartContract !== null && blockchain.errorMsg === \"\" ? /*#__PURE__*/_jsxDEV(s.Container, {\n            ai: \"center\",\n            jc: \"center\",\n            fd: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(s.connectButton, {\n              style: {\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n                cursor: \"pointer\"\n              },\n              disabled: disable,\n              onClick: e => {\n                e.preventDefault();\n                claimNFTs();\n                getData();\n              },\n              children: [\" \", claimingNft ? \"Please Confirm Transaction in Your Wallet\" : \"Mint\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 19\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(s.connectButton, {\n              style: {\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n                cursor: \"pointer\"\n              },\n              disabled: state == 0 ? 1 : 0,\n              onClick: e => {\n                e.preventDefault();\n                dispatch(connectWallet());\n                getData();\n              },\n              children: \"Connect Your Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }, this)\n          }, void 0, false), /*#__PURE__*/_jsxDEV(s.SpacerLarge, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), blockchain.errorMsg !== \"\" ? /*#__PURE__*/_jsxDEV(s.connectButton, {\n            style: {\n              textAlign: \"center\",\n              color: \"var(primary-text)\",\n              cursor: \"pointer\"\n            },\n            children: blockchain.errorMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(s.TextDescription, {\n            style: {\n              textAlign: \"center\",\n              color: \"#fff\",\n              cursor: \"pointer\"\n            },\n            children: feedback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Social, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(s.Image, {\n          src: \"config/images/2.png\",\n          wid: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.SpacerLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"np1EDhcsJ+/AYRwAEPzaA/Cxf54=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/waleed/Desktop/MintWebsites/metaverse/src/pages/HomePage/Home.js"],"names":["React","useEffect","useState","useRef","useDispatch","useSelector","connect","connectWallet","fetchData","s","Navbar","Social","Loader","createAlchemyWeb3","ethers","require","Web3","Contract","Home","cost","dispatch","blockchain","state","data","claimingNft","setClaimingNft","mintDone","setMintDone","supply","setTotalSupply","feedback","setFeedback","mintAmount","setMintAmount","displayCost","setDisplayCost","setState","canMintWL","setCanMintWL","disable","setDisable","loading","setLoading","nftCost","setNftCost","statusAlert","setStatusAlert","max","setMax","CONFIG","SET_CONFIG","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","claimNFTs","utils","toWei","String","gasLimit","totalCostWei","totalGasLimit","smartContract","methods","mint","send","to","from","account","value","once","err","console","log","then","receipt","totalSupply","call","res","decrementMintAmount","newMintAmount","parseFloat","toFixed","incrementMintAmount","maxNfts","getData","mintWL","isWhitelisted","getDataWithAlchemy","web3","abiResponse","fetch","headers","Accept","abi","json","contract","setProvider","currentProvider","currentState","wlCost","costWL","fromWei","wlMax","maxMintAmount","puCost","puMax","getConfig","configResponse","config","setTimeout","addEventListener","letterSpacing","lineHeight","e","preventDefault","cursor","errorMsg","textAlign","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"../../redux/blockchain/blockchainActions\";\nimport { connectWallet } from \"../../redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./../../redux/data/dataActions\";\nimport * as s from \"./../../styles/globalStyles\";\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport Social from \"../../components/SocialMedia/Social\";\nimport Loader from \"../../components/Loader/loader\";\n\nconst { createAlchemyWeb3, ethers } = require(\"@alch/alchemy-web3\");\nvar Web3 = require('web3');\nvar Contract = require('web3-eth-contract');\n\nfunction Home() {\n  let cost = 0.00;\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [mintDone, setMintDone] = useState(false);\n  const [supply, setTotalSupply] = useState(0);\n  const [feedback, setFeedback] = useState(\"\");\n  const [mintAmount, setMintAmount] = useState(1);\n  const [displayCost, setDisplayCost] = useState(cost);\n  const [state, setState] = useState(-1);\n  const [canMintWL, setCanMintWL] = useState(false);\n  const [disable, setDisable] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [nftCost, setNftCost] = useState(-1);\n  const [statusAlert, setStatusAlert] = useState(\"\");\n  const [max, setMax] = useState(0);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = nftCost;\n    cost = Web3.utils.toWei(String(cost), \"ether\");\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}`);\n    setClaimingNft(true);\n    setDisable(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        setMintDone(true);\n        setFeedback(`Congratulation, your mint is successful.`);\n        setClaimingNft(false);\n        blockchain.smartContract.methods\n          .totalSupply()\n          .call()\n          .then((res) => {\n            setTotalSupply(res);\n          });\n\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n    setDisplayCost(\n      parseFloat(nftCost * newMintAmount).toFixed(2)\n    );\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    newMintAmount > max\n      ? (newMintAmount = max)\n      : newMintAmount;\n    setDisplayCost(\n      parseFloat(nftCost * newMintAmount).toFixed(2)\n    );\n    setMintAmount(newMintAmount);\n  };\n\n  const maxNfts = () => {\n    setMintAmount(max);\n    setDisplayCost(\n      parseFloat(nftCost * max).toFixed(2)\n    );\n\n  };\n\n  const getData = async () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n      \n\n      if (state == 1) {\n        let mintWL = await blockchain.smartContract.methods\n          .isWhitelisted(blockchain.account)\n          .call();\n        console.log({ mintWL });\n        setCanMintWL(mintWL);\n        (mintWL) ? \"\" : setFeedback(`Sorry, your wallet is not on the whitelist`);\n        (mintWL) ? setDisable(false) : setDisable(true);\n\n      }\n    }\n  };\n\n  const getDataWithAlchemy = async () => {\n    const web3 = createAlchemyWeb3(\"https://eth-rinkeby.alchemyapi.io/v2/r6eG6CaBZCKMgr9n_LtLiBdruY9DwF_v\");\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    var contract = new Contract(abi, '0xE4B000466c79C01235F912EDFc275a8105B2B360');\n    contract.setProvider(web3.currentProvider);\n    // Get Total Supply\n    const totalSupply = await contract.methods\n      .totalSupply()\n      .call();\n    setTotalSupply(totalSupply);\n\n    // Get Contract State\n    let currentState = await contract.methods\n      .currentState()\n      .call();\n    setState(currentState);\n    console.log(currentState);\n\n    // Set Price and Max According to State\n\n    if (currentState == 0) {\n      setStatusAlert(\"MINT NOT LIVE YET!\");\n      setDisable(true);\n      setDisplayCost(0.00);\n      setMax(0);\n    }\n    else if (currentState == 1) {\n      let wlCost = await contract.methods\n        .costWL()\n        .call();\n      setDisplayCost(web3.utils.fromWei(wlCost));\n      setNftCost(web3.utils.fromWei(wlCost));\n      setStatusAlert(\"WHITELIST IS NOW LIVE!\");\n      setFeedback(\"Are you Whitelisted Member?\");\n\n      let wlMax = await contract.methods\n        .maxMintAmount()\n        .call();\n      setMax(wlMax);\n    }\n    else {\n      let puCost = await contract.methods\n        .cost()\n        .call();\n      setDisplayCost(web3.utils.fromWei(puCost));\n      setNftCost(web3.utils.fromWei(puCost));\n      setStatusAlert(\"Public Mint is Live\");\n      let puMax = await contract.methods\n        .maxMintAmount()\n        .call();\n      setMax(puMax);\n    }\n\n  }\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n    getDataWithAlchemy();\n    setTimeout(() => {\n      setLoading(false);\n    }, 1500);\n  }, []);\n\n  useEffect(() => {\n    addEventListener\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      <s.Body>\n        <Navbar />\n        <s.FlexContainer\n          jc={\"space-between\"}\n          ai={\"center\"}\n          fd={\"row\"}\n          mt={\"25vh\"}\n        >\n          <s.Image src={\"config/images/1.png\"} wid={\"25\"} />\n          <s.Mint>\n            <s.TextTitle color={\"#fff\"} size={4.0} style={{ letterSpacing: \"3px\" }}>\n              {statusAlert}\n            </s.TextTitle>\n            <s.SpacerSmall />\n            <s.TextSubTitle size={1.8}>\n              {CONFIG.MAX_SUPPLY - supply} of {CONFIG.MAX_SUPPLY}   NFT's Available\n            </s.TextSubTitle>\n            <s.SpacerLarge />\n            <s.SpacerLarge />\n\n            <s.FlexContainer fd={\"row\"} ai={\"center\"} jc={\"space-between\"}>\n              <s.TextTitle>Amount</s.TextTitle>\n\n              <s.AmountContainer ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                <s.StyledRoundButton\n                  style={{ lineHeight: 0.4 }}\n                  disabled={claimingNft ? 1 : 0}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    decrementMintAmount();\n                  }}\n                >\n                  -\n                </s.StyledRoundButton>\n                <s.SpacerMedium />\n                <s.TextDescription color={\"var(--primary)\"} size={\"2.5rem\"}>\n                  {mintAmount}\n                </s.TextDescription>\n                <s.SpacerMedium />\n                <s.StyledRoundButton\n                  disabled={claimingNft ? 1 : 0}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    incrementMintAmount();\n                  }}\n                >\n                  +\n                </s.StyledRoundButton>\n              </s.AmountContainer>\n\n              <s.maxButton\n                style={{ cursor: \"pointer\" }}\n                onClick={(e) => {\n                  e.preventDefault();\n                  maxNfts();\n                }}\n              >\n                MAX\n              </s.maxButton>\n            </s.FlexContainer>\n\n            <s.SpacerSmall />\n            <s.Line />\n            <s.SpacerLarge />\n            <s.FlexContainer fd={\"row\"} ai={\"center\"} jc={\"space-between\"}>\n              <s.TextTitle>Total Price</s.TextTitle>\n              <s.TextTitle color={\"var(--primary)\"}>{displayCost}</s.TextTitle>\n            </s.FlexContainer>\n            <s.SpacerSmall />\n            <s.Line />\n            <s.SpacerSmall />\n            <s.SpacerLarge />\n\n            {blockchain.account !== \"\" && \n            blockchain.smartContract !== null && \n            blockchain.errorMsg === \"\"\n              ? (\n                <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                  <s.connectButton\n                  style={{\n                    textAlign: \"center\",\n                    color: \"var(--primary-text)\",\n                    cursor: \"pointer\",\n                  }}\n                    disabled={disable}\n                    onClick={(e) => {\n                      e.preventDefault();\n                      claimNFTs();\n                      getData();\n                    }}\n                  >\n                    {\" \"}\n                    {claimingNft ? \"Please Confirm Transaction in Your Wallet\" : \"Mint\"}{\" \"}\n                  </s.connectButton>{\" \"}\n                </s.Container>\n              ) : (\n                <>\n                  <s.connectButton\n                    style={{\n                      textAlign: \"center\",\n                      color: \"var(--primary-text)\",\n                      cursor: \"pointer\",\n                    }}\n                    disabled={state == 0 ? 1 : 0}\n                    onClick={(e) => {\n                      e.preventDefault();\n                      dispatch(connectWallet());\n                      getData();\n                    }}\n                  >\n                    Connect Your Wallet\n                  </s.connectButton>\n                </>\n\n              )}\n            <s.SpacerLarge />\n            {blockchain.errorMsg !== \"\" ? (\n              <s.connectButton\n                style={{\n                  textAlign: \"center\",\n                  color: \"var(primary-text)\",\n                  cursor: \"pointer\",\n                }}\n              >\n                {blockchain.errorMsg}\n              </s.connectButton>\n            ) : (\n              <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"#fff\",\n                cursor: \"pointer\",\n              }}\n            >\n              {feedback}\n            </s.TextDescription>\n\n            )}\n\n     \n            <Social />\n          </s.Mint>\n          <s.Image src={\"config/images/2.png\"} wid={\"25\"} />\n        </s.FlexContainer>\n        <s.SpacerLarge />\n      </s.Body>\n\n    </>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}