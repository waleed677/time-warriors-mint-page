{"ast":null,"code":"const BaseFilter = require('./base-filter');\n\nconst getBlocksForRange = require('./getBlocksForRange');\n\nconst {\n  incrementHexInt\n} = require('./hexUtils');\n\nclass TxFilter extends BaseFilter {\n  constructor({\n    provider\n  }) {\n    super();\n    this.type = 'tx';\n    this.provider = provider;\n  }\n\n  async update({\n    oldBlock\n  }) {\n    const toBlock = oldBlock;\n    const fromBlock = incrementHexInt(oldBlock);\n    const blocks = await getBlocksForRange({\n      provider: this.provider,\n      fromBlock,\n      toBlock\n    });\n    const blockTxHashes = [];\n\n    for (const block of blocks) {\n      blockTxHashes.push(...block.transactions);\n    } // add to results\n\n\n    this.addResults(blockTxHashes);\n  }\n\n}\n\nmodule.exports = TxFilter;","map":{"version":3,"sources":["E:/Freelancing/blockchain/time-warriors-mint-page/node_modules/eth-json-rpc-filters/tx-filter.js"],"names":["BaseFilter","require","getBlocksForRange","incrementHexInt","TxFilter","constructor","provider","type","update","oldBlock","toBlock","fromBlock","blocks","blockTxHashes","block","push","transactions","addResults","module","exports"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,qBAAD,CAAjC;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAsBF,OAAO,CAAC,YAAD,CAAnC;;AAEA,MAAMG,QAAN,SAAuBJ,UAAvB,CAAkC;AAEhCK,EAAAA,WAAW,CAAE;AAAEC,IAAAA;AAAF,GAAF,EAAgB;AACzB;AACA,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKD,QAAL,GAAgBA,QAAhB;AACD;;AAEW,QAANE,MAAM,CAAE;AAAEC,IAAAA;AAAF,GAAF,EAAgB;AAC1B,UAAMC,OAAO,GAAGD,QAAhB;AACA,UAAME,SAAS,GAAGR,eAAe,CAACM,QAAD,CAAjC;AACA,UAAMG,MAAM,GAAG,MAAMV,iBAAiB,CAAC;AAAEI,MAAAA,QAAQ,EAAE,KAAKA,QAAjB;AAA2BK,MAAAA,SAA3B;AAAsCD,MAAAA;AAAtC,KAAD,CAAtC;AACA,UAAMG,aAAa,GAAG,EAAtB;;AACA,SAAK,MAAMC,KAAX,IAAoBF,MAApB,EAA4B;AAC1BC,MAAAA,aAAa,CAACE,IAAd,CAAmB,GAAGD,KAAK,CAACE,YAA5B;AACD,KAPyB,CAQ1B;;;AACA,SAAKC,UAAL,CAAgBJ,aAAhB;AACD;;AAlB+B;;AAsBlCK,MAAM,CAACC,OAAP,GAAiBf,QAAjB","sourcesContent":["const BaseFilter = require('./base-filter')\r\nconst getBlocksForRange = require('./getBlocksForRange')\r\nconst { incrementHexInt } = require('./hexUtils')\r\n\r\nclass TxFilter extends BaseFilter {\r\n\r\n  constructor ({ provider }) {\r\n    super()\r\n    this.type = 'tx'\r\n    this.provider = provider\r\n  }\r\n\r\n  async update ({ oldBlock }) {\r\n    const toBlock = oldBlock\r\n    const fromBlock = incrementHexInt(oldBlock)\r\n    const blocks = await getBlocksForRange({ provider: this.provider, fromBlock, toBlock })\r\n    const blockTxHashes = []\r\n    for (const block of blocks) {\r\n      blockTxHashes.push(...block.transactions)\r\n    }\r\n    // add to results\r\n    this.addResults(blockTxHashes)\r\n  }\r\n\r\n}\r\n\r\nmodule.exports = TxFilter\r\n"]},"metadata":{},"sourceType":"script"}