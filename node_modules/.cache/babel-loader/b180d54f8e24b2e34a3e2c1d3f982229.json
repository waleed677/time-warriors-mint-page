{"ast":null,"code":"/*\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\n\n/**\r\n * @file index.js\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\n\"use strict\";\n\nvar Subscription = require('./subscription.js');\n\nvar Subscriptions = function Subscriptions(options) {\n  this.name = options.name;\n  this.type = options.type;\n  this.subscriptions = options.subscriptions || {};\n  this.requestManager = null;\n};\n\nSubscriptions.prototype.setRequestManager = function (rm) {\n  this.requestManager = rm;\n};\n\nSubscriptions.prototype.attachToObject = function (obj) {\n  var func = this.buildCall();\n  var name = this.name.split('.');\n\n  if (name.length > 1) {\n    obj[name[0]] = obj[name[0]] || {};\n    obj[name[0]][name[1]] = func;\n  } else {\n    obj[name[0]] = func;\n  }\n};\n\nSubscriptions.prototype.buildCall = function () {\n  var _this = this;\n\n  return function () {\n    if (!_this.subscriptions[arguments[0]]) {\n      console.warn('Subscription ' + JSON.stringify(arguments[0]) + ' doesn\\'t exist. Subscribing anyway.');\n    }\n\n    var subscription = new Subscription({\n      subscription: _this.subscriptions[arguments[0]] || {},\n      requestManager: _this.requestManager,\n      type: _this.type\n    });\n    return subscription.subscribe.apply(subscription, arguments);\n  };\n};\n\nmodule.exports = {\n  subscriptions: Subscriptions,\n  subscription: Subscription\n};","map":{"version":3,"sources":["E:/Freelancing/blockchain/time-warriors-mint-page/node_modules/web3-core-subscriptions/lib/index.js"],"names":["Subscription","require","Subscriptions","options","name","type","subscriptions","requestManager","prototype","setRequestManager","rm","attachToObject","obj","func","buildCall","split","length","_this","arguments","console","warn","JSON","stringify","subscription","subscribe","apply","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIA,YAAY,GAAGC,OAAO,CAAC,mBAAD,CAA1B;;AACA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,OAAvB,EAAgC;AAChD,OAAKC,IAAL,GAAYD,OAAO,CAACC,IAApB;AACA,OAAKC,IAAL,GAAYF,OAAO,CAACE,IAApB;AACA,OAAKC,aAAL,GAAqBH,OAAO,CAACG,aAAR,IAAyB,EAA9C;AACA,OAAKC,cAAL,GAAsB,IAAtB;AACH,CALD;;AAMAL,aAAa,CAACM,SAAd,CAAwBC,iBAAxB,GAA4C,UAAUC,EAAV,EAAc;AACtD,OAAKH,cAAL,GAAsBG,EAAtB;AACH,CAFD;;AAGAR,aAAa,CAACM,SAAd,CAAwBG,cAAxB,GAAyC,UAAUC,GAAV,EAAe;AACpD,MAAIC,IAAI,GAAG,KAAKC,SAAL,EAAX;AACA,MAAIV,IAAI,GAAG,KAAKA,IAAL,CAAUW,KAAV,CAAgB,GAAhB,CAAX;;AACA,MAAIX,IAAI,CAACY,MAAL,GAAc,CAAlB,EAAqB;AACjBJ,IAAAA,GAAG,CAACR,IAAI,CAAC,CAAD,CAAL,CAAH,GAAeQ,GAAG,CAACR,IAAI,CAAC,CAAD,CAAL,CAAH,IAAgB,EAA/B;AACAQ,IAAAA,GAAG,CAACR,IAAI,CAAC,CAAD,CAAL,CAAH,CAAaA,IAAI,CAAC,CAAD,CAAjB,IAAwBS,IAAxB;AACH,GAHD,MAIK;AACDD,IAAAA,GAAG,CAACR,IAAI,CAAC,CAAD,CAAL,CAAH,GAAeS,IAAf;AACH;AACJ,CAVD;;AAWAX,aAAa,CAACM,SAAd,CAAwBM,SAAxB,GAAoC,YAAY;AAC5C,MAAIG,KAAK,GAAG,IAAZ;;AACA,SAAO,YAAY;AACf,QAAI,CAACA,KAAK,CAACX,aAAN,CAAoBY,SAAS,CAAC,CAAD,CAA7B,CAAL,EAAwC;AACpCC,MAAAA,OAAO,CAACC,IAAR,CAAa,kBAAkBC,IAAI,CAACC,SAAL,CAAeJ,SAAS,CAAC,CAAD,CAAxB,CAAlB,GAAiD,sCAA9D;AACH;;AACD,QAAIK,YAAY,GAAG,IAAIvB,YAAJ,CAAiB;AAChCuB,MAAAA,YAAY,EAAEN,KAAK,CAACX,aAAN,CAAoBY,SAAS,CAAC,CAAD,CAA7B,KAAqC,EADnB;AAEhCX,MAAAA,cAAc,EAAEU,KAAK,CAACV,cAFU;AAGhCF,MAAAA,IAAI,EAAEY,KAAK,CAACZ;AAHoB,KAAjB,CAAnB;AAKA,WAAOkB,YAAY,CAACC,SAAb,CAAuBC,KAAvB,CAA6BF,YAA7B,EAA2CL,SAA3C,CAAP;AACH,GAVD;AAWH,CAbD;;AAcAQ,MAAM,CAACC,OAAP,GAAiB;AACbrB,EAAAA,aAAa,EAAEJ,aADF;AAEbqB,EAAAA,YAAY,EAAEvB;AAFD,CAAjB","sourcesContent":["/*\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n/**\r\n * @file index.js\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\r\n\"use strict\";\r\nvar Subscription = require('./subscription.js');\r\nvar Subscriptions = function Subscriptions(options) {\r\n    this.name = options.name;\r\n    this.type = options.type;\r\n    this.subscriptions = options.subscriptions || {};\r\n    this.requestManager = null;\r\n};\r\nSubscriptions.prototype.setRequestManager = function (rm) {\r\n    this.requestManager = rm;\r\n};\r\nSubscriptions.prototype.attachToObject = function (obj) {\r\n    var func = this.buildCall();\r\n    var name = this.name.split('.');\r\n    if (name.length > 1) {\r\n        obj[name[0]] = obj[name[0]] || {};\r\n        obj[name[0]][name[1]] = func;\r\n    }\r\n    else {\r\n        obj[name[0]] = func;\r\n    }\r\n};\r\nSubscriptions.prototype.buildCall = function () {\r\n    var _this = this;\r\n    return function () {\r\n        if (!_this.subscriptions[arguments[0]]) {\r\n            console.warn('Subscription ' + JSON.stringify(arguments[0]) + ' doesn\\'t exist. Subscribing anyway.');\r\n        }\r\n        var subscription = new Subscription({\r\n            subscription: _this.subscriptions[arguments[0]] || {},\r\n            requestManager: _this.requestManager,\r\n            type: _this.type\r\n        });\r\n        return subscription.subscribe.apply(subscription, arguments);\r\n    };\r\n};\r\nmodule.exports = {\r\n    subscriptions: Subscriptions,\r\n    subscription: Subscription\r\n};\r\n"]},"metadata":{},"sourceType":"script"}