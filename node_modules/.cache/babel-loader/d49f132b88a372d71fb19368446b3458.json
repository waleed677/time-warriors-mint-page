{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function withLatestFrom() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  return function (source) {\n    var project;\n\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n\n    var observables = args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\n\nvar WithLatestFromOperator = function () {\n  function WithLatestFromOperator(observables, project) {\n    this.observables = observables;\n    this.project = project;\n  }\n\n  WithLatestFromOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  };\n\n  return WithLatestFromOperator;\n}();\n\nvar WithLatestFromSubscriber = function (_super) {\n  tslib_1.__extends(WithLatestFromSubscriber, _super);\n\n  function WithLatestFromSubscriber(destination, observables, project) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.observables = observables;\n    _this.project = project;\n    _this.toRespond = [];\n    var len = observables.length;\n    _this.values = new Array(len);\n\n    for (var i = 0; i < len; i++) {\n      _this.toRespond.push(i);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var observable = observables[i];\n\n      _this.add(subscribeToResult(_this, observable, undefined, i));\n    }\n\n    return _this;\n  }\n\n  WithLatestFromSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {\n    this.values[outerIndex] = innerValue;\n    var toRespond = this.toRespond;\n\n    if (toRespond.length > 0) {\n      var found = toRespond.indexOf(outerIndex);\n\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  };\n\n  WithLatestFromSubscriber.prototype.notifyComplete = function () {};\n\n  WithLatestFromSubscriber.prototype._next = function (value) {\n    if (this.toRespond.length === 0) {\n      var args = [value].concat(this.values);\n\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next(args);\n      }\n    }\n  };\n\n  WithLatestFromSubscriber.prototype._tryProject = function (args) {\n    var result;\n\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    this.destination.next(result);\n  };\n\n  return WithLatestFromSubscriber;\n}(OuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/withLatestFrom.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { OuterSubscriber } from '../OuterSubscriber';\r\nimport { subscribeToResult } from '../util/subscribeToResult';\r\nexport function withLatestFrom() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    return function (source) {\r\n        var project;\r\n        if (typeof args[args.length - 1] === 'function') {\r\n            project = args.pop();\r\n        }\r\n        var observables = args;\r\n        return source.lift(new WithLatestFromOperator(observables, project));\r\n    };\r\n}\r\nvar WithLatestFromOperator = /*@__PURE__*/ (function () {\r\n    function WithLatestFromOperator(observables, project) {\r\n        this.observables = observables;\r\n        this.project = project;\r\n    }\r\n    WithLatestFromOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\r\n    };\r\n    return WithLatestFromOperator;\r\n}());\r\nvar WithLatestFromSubscriber = /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(WithLatestFromSubscriber, _super);\r\n    function WithLatestFromSubscriber(destination, observables, project) {\r\n        var _this = _super.call(this, destination) || this;\r\n        _this.observables = observables;\r\n        _this.project = project;\r\n        _this.toRespond = [];\r\n        var len = observables.length;\r\n        _this.values = new Array(len);\r\n        for (var i = 0; i < len; i++) {\r\n            _this.toRespond.push(i);\r\n        }\r\n        for (var i = 0; i < len; i++) {\r\n            var observable = observables[i];\r\n            _this.add(subscribeToResult(_this, observable, undefined, i));\r\n        }\r\n        return _this;\r\n    }\r\n    WithLatestFromSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {\r\n        this.values[outerIndex] = innerValue;\r\n        var toRespond = this.toRespond;\r\n        if (toRespond.length > 0) {\r\n            var found = toRespond.indexOf(outerIndex);\r\n            if (found !== -1) {\r\n                toRespond.splice(found, 1);\r\n            }\r\n        }\r\n    };\r\n    WithLatestFromSubscriber.prototype.notifyComplete = function () {\r\n    };\r\n    WithLatestFromSubscriber.prototype._next = function (value) {\r\n        if (this.toRespond.length === 0) {\r\n            var args = [value].concat(this.values);\r\n            if (this.project) {\r\n                this._tryProject(args);\r\n            }\r\n            else {\r\n                this.destination.next(args);\r\n            }\r\n        }\r\n    };\r\n    WithLatestFromSubscriber.prototype._tryProject = function (args) {\r\n        var result;\r\n        try {\r\n            result = this.project.apply(this, args);\r\n        }\r\n        catch (err) {\r\n            this.destination.error(err);\r\n            return;\r\n        }\r\n        this.destination.next(result);\r\n    };\r\n    return WithLatestFromSubscriber;\r\n}(OuterSubscriber));\r\n//# sourceMappingURL=withLatestFrom.js.map\r\n"]},"metadata":{},"sourceType":"module"}