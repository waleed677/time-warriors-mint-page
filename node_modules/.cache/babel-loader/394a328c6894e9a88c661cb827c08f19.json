{"ast":null,"code":"var _jsxFileName = \"/home/waleed/Desktop/MintWebsites/metaverse/src/pages/HomePage/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"../../redux/blockchain/blockchainActions\";\nimport { connectWallet } from \"../../redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./../../redux/data/dataActions\";\nimport { StyledRoundButton } from \"./../../components/styles/styledRoundButton.styled\";\nimport * as s from \"./../../styles/globalStyles\";\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport Social from \"../../components/SocialMedia/Social\";\nimport Loader from \"../../components/Loader/loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst {\n  createAlchemyWeb3,\n  ethers\n} = require(\"@alch/alchemy-web3\");\n\nvar Web3 = require('web3');\n\nvar Contract = require('web3-eth-contract');\n\nfunction Home() {\n  _s();\n\n  let cost = 0.00;\n  const dispatch = useDispatch();\n  const blockchain = useSelector(state => state.blockchain);\n  const data = useSelector(state => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [mintDone, setMintDone] = useState(false);\n  const [supply, setTotalSupply] = useState(0);\n  const [feedback, setFeedback] = useState(\"\");\n  const [mintAmount, setMintAmount] = useState(1);\n  const [displayCost, setDisplayCost] = useState(cost);\n  const [state, setState] = useState(-1);\n  const [canMintWL, setCanMintWL] = useState(false);\n  const [disable, setDisable] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [nftCost, setNftCost] = useState(-1);\n  const [statusAlert, setStatusAlert] = useState(\"\");\n  const [max, setMax] = useState(0);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false\n  });\n\n  const claimNFTs = () => {\n    let cost = 0;\n\n    if (state == 1) {\n      cost = CONFIG.WEI_COST_WL;\n    } else if (state == 2) {\n      cost = CONFIG.WEI_COST_PU;\n    } else {\n      cost = 0;\n    }\n\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}`);\n    setClaimingNft(true);\n    setDisable(true);\n    blockchain.smartContract.methods.mint(mintAmount).send({\n      gasLimit: String(totalGasLimit),\n      to: CONFIG.CONTRACT_ADDRESS,\n      from: blockchain.account,\n      value: totalCostWei\n    }).once(\"error\", err => {\n      console.log(err);\n      setFeedback(\"Sorry, something went wrong please try again later.\");\n      setClaimingNft(false);\n    }).then(receipt => {\n      setMintDone(true);\n      setFeedback(`Done , ${CONFIG.NFT_NAME} Is Yours!`);\n      setClaimingNft(false);\n      blockchain.smartContract.methods.totalSupply().call().then(res => {\n        setTotalSupply(res);\n      });\n      dispatch(fetchData(blockchain.account));\n    });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n\n    setMintAmount(newMintAmount);\n    setDisplayCost(parseFloat(nftCost * newMintAmount).toFixed(2));\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n\n    if (newMintAmount > 10) {\n      newMintAmount = 10;\n    }\n\n    setMintAmount(newMintAmount);\n\n    if (state == 1) {\n      setDisplayCost(parseFloat(CONFIG.DISPLAY_COST_WL * newMintAmount).toFixed(3));\n    } else {\n      setDisplayCost(parseFloat(CONFIG.DISPLAY_COST_PU * newMintAmount).toFixed(3));\n    }\n  };\n\n  const maxNfts = () => {\n    if (state == 0) {\n      setMintAmount(0);\n      setDisplayCost(0.00);\n    } else if (state == 1) {\n      setMintAmount(CONFIG.MAX_LIMIT);\n      setDisplayCost(parseFloat(CONFIG.DISPLAY_COST_WL * CONFIG.MAX_LIMIT).toFixed(3));\n    } else {\n      setMintAmount(CONFIG.MAX_LIMIT);\n      setDisplayCost(parseFloat(CONFIG.DISPLAY_COST_PU * CONFIG.MAX_LIMIT).toFixed(3));\n    }\n  };\n\n  const getData = async () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n      const totalSupply = await blockchain.smartContract.methods.totalSupply().call();\n      setTotalSupply(totalSupply);\n      let currentState = await blockchain.smartContract.methods.currentState().call();\n      console.log({\n        currentState\n      });\n      setState(currentState);\n\n      if (currentState == 1) {\n        let mintWL = await blockchain.smartContract.methods.isWhitelisted(blockchain.account).call();\n        console.log({\n          mintWL\n        });\n        setCanMintWL(mintWL);\n        mintWL ? \"\" : setFeedback(`This wallet is not on the Whitelist`);\n        mintWL ? setDisable(false) : setDisable(true);\n        setDisplayCost(CONFIG.DISPLAY_COST_WL);\n      } else {\n        setDisplayCost(CONFIG.DISPLAY_COST_PU);\n      }\n    }\n  };\n\n  const getDataWithAlchemy = async () => {\n    const web3 = createAlchemyWeb3(\"https://eth-rinkeby.alchemyapi.io/v2/r6eG6CaBZCKMgr9n_LtLiBdruY9DwF_v\");\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    });\n    const abi = await abiResponse.json();\n    var contract = new Contract(abi, '0xE4B000466c79C01235F912EDFc275a8105B2B360');\n    contract.setProvider(web3.currentProvider); // Get Total Supply\n\n    const totalSupply = await contract.methods.totalSupply().call();\n    setTotalSupply(totalSupply); // Get Contract State\n\n    let currentState = await contract.methods.currentState().call();\n    setState(currentState);\n    console.log(currentState); // Set Price and Max According to State\n\n    if (currentState == 0) {\n      setStatusAlert(\"MINT NOT LIVE YET!\");\n      setDisable(true);\n      setDisplayCost(0.00);\n      setMax(0);\n    } else if (currentState == 1) {\n      let wlCost = await contract.methods.costWL().call();\n      setDisplayCost(web3.utils.fromWei(wlCost));\n      setNftCost(web3.utils.fromWei(wlCost));\n      setStatusAlert(\"WHITELIST IS NOW LIVE!\");\n      setFeedback(\"Are you Whitelisted Member?\");\n      let wlMax = await contract.methods.maxMintAmount().call();\n      setMax(wlMax);\n    } else {\n      let puCost = await contract.methods.cost().call();\n      setDisplayCost(web3.utils.fromWei(puCost));\n      setNftCost(web3.utils.fromWei(puCost));\n      setStatusAlert(\"Public Mint is Live\");\n      let puMax = await contract.methods.maxMintAmount().call();\n      setMax(puMax);\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n    getDataWithAlchemy();\n  }, []);\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(s.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.FlexContainer, {\n        jc: \"space-between\",\n        ai: \"center\",\n        fd: \"row\",\n        mt: \"25vh\",\n        children: [/*#__PURE__*/_jsxDEV(s.Image, {\n          src: \"config/images/1.png\",\n          wid: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(s.Mint, {\n          children: [/*#__PURE__*/_jsxDEV(s.TextTitle, {\n            size: 6.0,\n            style: {\n              letterSpacing: \"3px\"\n            },\n            children: \"MINT NOW\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.SpacerSmall, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.TextSubTitle, {\n            size: 1.4,\n            children: [CONFIG.MAX_SUPPLY - supply, \" of \", CONFIG.MAX_SUPPLY, \"   NFT's Available\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.SpacerLarge, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.SpacerLarge, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.FlexContainer, {\n            fd: \"row\",\n            ai: \"center\",\n            jc: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(s.TextTitle, {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(s.AmountContainer, {\n              ai: \"center\",\n              jc: \"center\",\n              fd: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(StyledRoundButton, {\n                style: {\n                  lineHeight: 0.4\n                },\n                disabled: claimingNft ? 1 : 0,\n                onClick: e => {\n                  e.preventDefault();\n                  decrementMintAmount();\n                },\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(s.SpacerMedium, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(s.TextDescription, {\n                color: \"var(--primary)\",\n                size: \"2.5rem\",\n                children: mintAmount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(s.SpacerMedium, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledRoundButton, {\n                disabled: claimingNft ? 1 : 0,\n                onClick: e => {\n                  e.preventDefault();\n                  incrementMintAmount();\n                },\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(s.maxButton, {\n              style: {\n                cursor: \"pointer\"\n              },\n              onClick: e => {\n                e.preventDefault();\n                maxNfts();\n              },\n              children: \"Max\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.SpacerSmall, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.Line, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.SpacerLarge, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.FlexContainer, {\n            fd: \"row\",\n            ai: \"center\",\n            jc: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(s.TextTitle, {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(s.TextTitle, {\n              color: \"var(--primary)\",\n              children: displayCost\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.SpacerSmall, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.Line, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.SpacerSmall, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.SpacerLarge, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this), blockchain.account !== \"\" && blockchain.smartContract !== null && blockchain.errorMsg === \"\" && canMintWL === true && state == 1 ? /*#__PURE__*/_jsxDEV(s.Container, {\n            ai: \"center\",\n            jc: \"center\",\n            fd: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(s.connectButton, {\n              disabled: disable,\n              onClick: e => {\n                e.preventDefault();\n                claimNFTs();\n                getData();\n              },\n              children: [\" \", claimingNft ? \"Please Confirm the Transaction in Your Wallet\" : \"Mint\", \" \", mintDone ? feedback : \"\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(s.connectButton, {\n              style: {\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n                cursor: \"pointer\"\n              },\n              disabled: state == 0 ? 1 : 0,\n              onClick: e => {\n                e.preventDefault();\n                dispatch(connectWallet());\n                getData();\n              },\n              children: \"Connect Your Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this)\n          }, void 0, false), /*#__PURE__*/_jsxDEV(s.SpacerLarge, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), blockchain.errorMsg !== \"\" ? /*#__PURE__*/_jsxDEV(s.connectButton, {\n            style: {\n              textAlign: \"center\",\n              color: \"var(primary-text)\",\n              cursor: \"pointer\"\n            },\n            children: blockchain.errorMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this) : \"\", state !== -1 && state === 0 ? /*#__PURE__*/_jsxDEV(s.connectButton, {\n            style: {\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n              cursor: \"pointer\"\n            },\n            children: feedback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this) : \"\", canMintWL !== true && state == 1 ? /*#__PURE__*/_jsxDEV(s.connectButton, {\n            style: {\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n              cursor: \"pointer\"\n            },\n            children: feedback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(Social, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(s.Image, {\n          src: \"config/images/2.png\",\n          wid: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.SpacerLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Home, \"np1EDhcsJ+/AYRwAEPzaA/Cxf54=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/waleed/Desktop/MintWebsites/metaverse/src/pages/HomePage/Home.js"],"names":["React","useEffect","useState","useRef","useDispatch","useSelector","connect","connectWallet","fetchData","StyledRoundButton","s","Navbar","Social","Loader","createAlchemyWeb3","ethers","require","Web3","Contract","Home","cost","dispatch","blockchain","state","data","claimingNft","setClaimingNft","mintDone","setMintDone","supply","setTotalSupply","feedback","setFeedback","mintAmount","setMintAmount","displayCost","setDisplayCost","setState","canMintWL","setCanMintWL","disable","setDisable","loading","setLoading","nftCost","setNftCost","statusAlert","setStatusAlert","max","setMax","CONFIG","SET_CONFIG","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","claimNFTs","WEI_COST_WL","WEI_COST_PU","gasLimit","totalCostWei","String","totalGasLimit","smartContract","methods","mint","send","to","from","account","value","once","err","console","log","then","receipt","totalSupply","call","res","decrementMintAmount","newMintAmount","parseFloat","toFixed","incrementMintAmount","DISPLAY_COST_WL","DISPLAY_COST_PU","maxNfts","MAX_LIMIT","getData","currentState","mintWL","isWhitelisted","getDataWithAlchemy","web3","abiResponse","fetch","headers","Accept","abi","json","contract","setProvider","currentProvider","wlCost","costWL","utils","fromWei","wlMax","maxMintAmount","puCost","puMax","getConfig","configResponse","config","letterSpacing","lineHeight","e","preventDefault","cursor","errorMsg","textAlign","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,0CAAxB;AACA,SAASC,aAAT,QAA8B,0CAA9B;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,SAASC,iBAAT,QAAkC,oDAAlC;AACA,OAAO,KAAKC,CAAZ,MAAmB,6BAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;;;AAEA,MAAM;AAAEC,EAAAA,iBAAF;AAAqBC,EAAAA;AAArB,IAAgCC,OAAO,CAAC,oBAAD,CAA7C;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,mBAAD,CAAtB;;AAEA,SAASG,IAAT,GAAgB;AAAA;;AACd,MAAIC,IAAI,GAAG,IAAX;AACA,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAMkB,UAAU,GAAGjB,WAAW,CAAEkB,KAAD,IAAWA,KAAK,CAACD,UAAlB,CAA9B;AACA,QAAME,IAAI,GAAGnB,WAAW,CAAEkB,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCxB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACyB,QAAD,EAAWC,WAAX,IAA0B1B,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAC2B,MAAD,EAASC,cAAT,IAA2B5B,QAAQ,CAAC,CAAD,CAAzC;AACA,QAAM,CAAC6B,QAAD,EAAWC,WAAX,IAA0B9B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC+B,UAAD,EAAaC,aAAb,IAA8BhC,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACiC,WAAD,EAAcC,cAAd,IAAgClC,QAAQ,CAACkB,IAAD,CAA9C;AACA,QAAM,CAACG,KAAD,EAAQc,QAAR,IAAoBnC,QAAQ,CAAC,CAAC,CAAF,CAAlC;AACA,QAAM,CAACoC,SAAD,EAAYC,YAAZ,IAA4BrC,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACsC,OAAD,EAAUC,UAAV,IAAwBvC,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACwC,OAAD,EAAUC,UAAV,IAAwBzC,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAAC0C,OAAD,EAAUC,UAAV,IAAwB3C,QAAQ,CAAC,CAAC,CAAF,CAAtC;AACA,QAAM,CAAC4C,WAAD,EAAcC,cAAd,IAAgC7C,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC8C,GAAD,EAAMC,MAAN,IAAgB/C,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACgD,MAAD,EAASC,UAAT,IAAuBjD,QAAQ,CAAC;AACpCkD,IAAAA,gBAAgB,EAAE,EADkB;AAEpCC,IAAAA,SAAS,EAAE,EAFyB;AAGpCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE,EADC;AAEPC,MAAAA,MAAM,EAAE,EAFD;AAGPC,MAAAA,EAAE,EAAE;AAHG,KAH2B;AAQpCC,IAAAA,QAAQ,EAAE,EAR0B;AASpCF,IAAAA,MAAM,EAAE,EAT4B;AAUpCG,IAAAA,UAAU,EAAE,CAVwB;AAWpCC,IAAAA,QAAQ,EAAE,CAX0B;AAYpCC,IAAAA,YAAY,EAAE,CAZsB;AAapCC,IAAAA,SAAS,EAAE,CAbyB;AAcpCC,IAAAA,WAAW,EAAE,EAduB;AAepCC,IAAAA,gBAAgB,EAAE,EAfkB;AAgBpCC,IAAAA,eAAe,EAAE;AAhBmB,GAAD,CAArC;;AAmBA,QAAMC,SAAS,GAAG,MAAM;AACtB,QAAI9C,IAAI,GAAG,CAAX;;AACA,QAAIG,KAAK,IAAI,CAAb,EAAgB;AACdH,MAAAA,IAAI,GAAG8B,MAAM,CAACiB,WAAd;AACD,KAFD,MAEO,IAAI5C,KAAK,IAAI,CAAb,EAAgB;AACrBH,MAAAA,IAAI,GAAG8B,MAAM,CAACkB,WAAd;AACD,KAFM,MAEF;AACHhD,MAAAA,IAAI,GAAG,CAAP;AACD;;AACD,QAAIiD,QAAQ,GAAGnB,MAAM,CAACY,SAAtB;AACA,QAAIQ,YAAY,GAAGC,MAAM,CAACnD,IAAI,GAAGa,UAAR,CAAzB;AACA,QAAIuC,aAAa,GAAGD,MAAM,CAACF,QAAQ,GAAGpC,UAAZ,CAA1B;AACAD,IAAAA,WAAW,CAAE,gBAAekB,MAAM,CAACQ,QAAS,EAAjC,CAAX;AACAhC,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAe,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAnB,IAAAA,UAAU,CAACmD,aAAX,CAAyBC,OAAzB,CACGC,IADH,CACQ1C,UADR,EAEG2C,IAFH,CAEQ;AACJP,MAAAA,QAAQ,EAAEE,MAAM,CAACC,aAAD,CADZ;AAEJK,MAAAA,EAAE,EAAE3B,MAAM,CAACE,gBAFP;AAGJ0B,MAAAA,IAAI,EAAExD,UAAU,CAACyD,OAHb;AAIJC,MAAAA,KAAK,EAAEV;AAJH,KAFR,EAQGW,IARH,CAQQ,OARR,EAQkBC,GAAD,IAAS;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAlD,MAAAA,WAAW,CAAC,qDAAD,CAAX;AACAN,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KAZH,EAaG2D,IAbH,CAaSC,OAAD,IAAa;AACjB1D,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAI,MAAAA,WAAW,CAAE,UAASkB,MAAM,CAACQ,QAAS,YAA3B,CAAX;AACAhC,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAJ,MAAAA,UAAU,CAACmD,aAAX,CAAyBC,OAAzB,CACGa,WADH,GAEGC,IAFH,GAGGH,IAHH,CAGSI,GAAD,IAAS;AACb3D,QAAAA,cAAc,CAAC2D,GAAD,CAAd;AACD,OALH;AAOApE,MAAAA,QAAQ,CAACb,SAAS,CAACc,UAAU,CAACyD,OAAZ,CAAV,CAAR;AACD,KAzBH;AA0BD,GAzCD;;AA0CA,QAAMW,mBAAmB,GAAG,MAAM;AAChC,QAAIC,aAAa,GAAG1D,UAAU,GAAG,CAAjC;;AACA,QAAI0D,aAAa,GAAG,CAApB,EAAuB;AACrBA,MAAAA,aAAa,GAAG,CAAhB;AACD;;AACDzD,IAAAA,aAAa,CAACyD,aAAD,CAAb;AACAvD,IAAAA,cAAc,CACZwD,UAAU,CAAChD,OAAO,GAAG+C,aAAX,CAAV,CAAoCE,OAApC,CAA4C,CAA5C,CADY,CAAd;AAGD,GATD;;AAWA,QAAMC,mBAAmB,GAAG,MAAM;AAChC,QAAIH,aAAa,GAAG1D,UAAU,GAAG,CAAjC;;AACA,QAAI0D,aAAa,GAAG,EAApB,EAAwB;AACtBA,MAAAA,aAAa,GAAG,EAAhB;AACD;;AACDzD,IAAAA,aAAa,CAACyD,aAAD,CAAb;;AACA,QAAGpE,KAAK,IAAI,CAAZ,EAAc;AACZa,MAAAA,cAAc,CAACwD,UAAU,CAAC1C,MAAM,CAAC6C,eAAP,GAAyBJ,aAA1B,CAAV,CAAmDE,OAAnD,CAA2D,CAA3D,CAAD,CAAd;AACH,KAFC,MAEG;AACDzD,MAAAA,cAAc,CAACwD,UAAU,CAAC1C,MAAM,CAAC8C,eAAP,GAAyBL,aAA1B,CAAV,CAAmDE,OAAnD,CAA2D,CAA3D,CAAD,CAAd;AACH;AACA,GAXD;;AAaA,QAAMI,OAAO,GAAG,MAAM;AACpB,QAAG1E,KAAK,IAAI,CAAZ,EAAe;AACbW,MAAAA,aAAa,CAAC,CAAD,CAAb;AACAE,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAHD,MAIK,IAAIb,KAAK,IAAI,CAAb,EAAgB;AACnBW,MAAAA,aAAa,CAACgB,MAAM,CAACgD,SAAR,CAAb;AACA9D,MAAAA,cAAc,CACZwD,UAAU,CAAC1C,MAAM,CAAC6C,eAAP,GAAyB7C,MAAM,CAACgD,SAAjC,CAAV,CAAsDL,OAAtD,CAA8D,CAA9D,CADY,CAAd;AAGD,KALI,MAKE;AACL3D,MAAAA,aAAa,CAACgB,MAAM,CAACgD,SAAR,CAAb;AACA9D,MAAAA,cAAc,CAACwD,UAAU,CAAC1C,MAAM,CAAC8C,eAAP,GAAyB9C,MAAM,CAACgD,SAAjC,CAAV,CAAsDL,OAAtD,CAA8D,CAA9D,CAAD,CAAd;AACD;AACF,GAdD;;AAgBA,QAAMM,OAAO,GAAG,YAAY;AAC1B,QAAI7E,UAAU,CAACyD,OAAX,KAAuB,EAAvB,IAA6BzD,UAAU,CAACmD,aAAX,KAA6B,IAA9D,EAAoE;AAClEpD,MAAAA,QAAQ,CAACb,SAAS,CAACc,UAAU,CAACyD,OAAZ,CAAV,CAAR;AACA,YAAMQ,WAAW,GAAG,MAAMjE,UAAU,CAACmD,aAAX,CAAyBC,OAAzB,CACvBa,WADuB,GAEvBC,IAFuB,EAA1B;AAGA1D,MAAAA,cAAc,CAACyD,WAAD,CAAd;AACA,UAAIa,YAAY,GAAG,MAAM9E,UAAU,CAACmD,aAAX,CAAyBC,OAAzB,CACtB0B,YADsB,GAEtBZ,IAFsB,EAAzB;AAGAL,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEgB,QAAAA;AAAF,OAAZ;AACA/D,MAAAA,QAAQ,CAAC+D,YAAD,CAAR;;AAEF,UAAIA,YAAY,IAAI,CAApB,EAAuB;AACnB,YAAIC,MAAM,GAAG,MAAM/E,UAAU,CAACmD,aAAX,CAAyBC,OAAzB,CAChB4B,aADgB,CACFhF,UAAU,CAACyD,OADT,EAEhBS,IAFgB,EAAnB;AAGEL,QAAAA,OAAO,CAACC,GAAR,CAAY;AAAEiB,UAAAA;AAAF,SAAZ;AACF9D,QAAAA,YAAY,CAAC8D,MAAD,CAAZ;AACCA,QAAAA,MAAD,GAAW,EAAX,GAAgBrE,WAAW,CAAE,qCAAF,CAA3B;AACCqE,QAAAA,MAAD,GAAW5D,UAAU,CAAC,KAAD,CAArB,GAA+BA,UAAU,CAAC,IAAD,CAAzC;AAEAL,QAAAA,cAAc,CAACc,MAAM,CAAC6C,eAAR,CAAd;AACD,OAVH,MAUS;AACL3D,QAAAA,cAAc,CAACc,MAAM,CAAC8C,eAAR,CAAd;AACD;AACF;AACF,GA3BD;;AA6BA,QAAMO,kBAAkB,GAAG,YAAY;AACrC,UAAMC,IAAI,GAAG1F,iBAAiB,CAAC,uEAAD,CAA9B;AACA,UAAM2F,WAAW,GAAG,MAAMC,KAAK,CAAC,kBAAD,EAAqB;AAClDC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD;AADyC,KAArB,CAA/B;AAMA,UAAMC,GAAG,GAAG,MAAMJ,WAAW,CAACK,IAAZ,EAAlB;AACA,QAAIC,QAAQ,GAAG,IAAI7F,QAAJ,CAAa2F,GAAb,EAAkB,4CAAlB,CAAf;AACAE,IAAAA,QAAQ,CAACC,WAAT,CAAqBR,IAAI,CAACS,eAA1B,EAVqC,CAWrC;;AACA,UAAM1B,WAAW,GAAG,MAAMwB,QAAQ,CAACrC,OAAT,CACvBa,WADuB,GAEvBC,IAFuB,EAA1B;AAGA1D,IAAAA,cAAc,CAACyD,WAAD,CAAd,CAfqC,CAiBrC;;AACA,QAAIa,YAAY,GAAG,MAAMW,QAAQ,CAACrC,OAAT,CACtB0B,YADsB,GAEtBZ,IAFsB,EAAzB;AAGAnD,IAAAA,QAAQ,CAAC+D,YAAD,CAAR;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAYgB,YAAZ,EAtBqC,CAwBrC;;AAEA,QAAIA,YAAY,IAAI,CAApB,EAAuB;AACrBrD,MAAAA,cAAc,CAAC,oBAAD,CAAd;AACAN,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAL,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAa,MAAAA,MAAM,CAAC,CAAD,CAAN;AACD,KALD,MAMK,IAAImD,YAAY,IAAI,CAApB,EAAuB;AAC1B,UAAIc,MAAM,GAAG,MAAMH,QAAQ,CAACrC,OAAT,CAChByC,MADgB,GAEhB3B,IAFgB,EAAnB;AAGApD,MAAAA,cAAc,CAACoE,IAAI,CAACY,KAAL,CAAWC,OAAX,CAAmBH,MAAnB,CAAD,CAAd;AACArE,MAAAA,UAAU,CAAC2D,IAAI,CAACY,KAAL,CAAWC,OAAX,CAAmBH,MAAnB,CAAD,CAAV;AACAnE,MAAAA,cAAc,CAAC,wBAAD,CAAd;AACAf,MAAAA,WAAW,CAAC,6BAAD,CAAX;AAEA,UAAIsF,KAAK,GAAG,MAAMP,QAAQ,CAACrC,OAAT,CACf6C,aADe,GAEf/B,IAFe,EAAlB;AAGAvC,MAAAA,MAAM,CAACqE,KAAD,CAAN;AACD,KAbI,MAcA;AACH,UAAIE,MAAM,GAAG,MAAMT,QAAQ,CAACrC,OAAT,CAChBtD,IADgB,GAEhBoE,IAFgB,EAAnB;AAGApD,MAAAA,cAAc,CAACoE,IAAI,CAACY,KAAL,CAAWC,OAAX,CAAmBG,MAAnB,CAAD,CAAd;AACA3E,MAAAA,UAAU,CAAC2D,IAAI,CAACY,KAAL,CAAWC,OAAX,CAAmBG,MAAnB,CAAD,CAAV;AACAzE,MAAAA,cAAc,CAAC,qBAAD,CAAd;AACA,UAAI0E,KAAK,GAAG,MAAMV,QAAQ,CAACrC,OAAT,CACf6C,aADe,GAEf/B,IAFe,EAAlB;AAGAvC,MAAAA,MAAM,CAACwE,KAAD,CAAN;AACD;AAEF,GA3DD;;AA6DA,QAAMC,SAAS,GAAG,YAAY;AAC5B,UAAMC,cAAc,GAAG,MAAMjB,KAAK,CAAC,qBAAD,EAAwB;AACxDC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD;AAD+C,KAAxB,CAAlC;AAMA,UAAMgB,MAAM,GAAG,MAAMD,cAAc,CAACb,IAAf,EAArB;AACA3D,IAAAA,UAAU,CAACyE,MAAD,CAAV;AACD,GATD;;AAWA3H,EAAAA,SAAS,CAAC,MAAM;AACdyH,IAAAA,SAAS;AACTnB,IAAAA,kBAAkB;AACnB,GAHQ,EAGN,EAHM,CAAT;AAKAtG,EAAAA,SAAS,CAAC,MAAM;AACdkG,IAAAA,OAAO;AACR,GAFQ,EAEN,CAAC7E,UAAU,CAACyD,OAAZ,CAFM,CAAT;AAIA,sBACE;AAAA,2BAEE,QAAC,CAAD,CAAG,IAAH;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,CAAD,CAAG,aAAH;AACE,QAAA,EAAE,EAAE,eADN;AAEE,QAAA,EAAE,EAAE,QAFN;AAGE,QAAA,EAAE,EAAE,KAHN;AAIE,QAAA,EAAE,EAAE,MAJN;AAAA,gCAME,QAAC,CAAD,CAAG,KAAH;AAAS,UAAA,GAAG,EAAE,qBAAd;AAAqC,UAAA,GAAG,EAAE;AAA1C;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,CAAD,CAAG,IAAH;AAAA,kCACE,QAAC,CAAD,CAAG,SAAH;AAAa,YAAA,IAAI,EAAE,GAAnB;AAAwB,YAAA,KAAK,EAAE;AAAE8C,cAAAA,aAAa,EAAE;AAAjB,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,CAAD,CAAG,WAAH;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,CAAD,CAAG,YAAH;AAAgB,YAAA,IAAI,EAAE,GAAtB;AAAA,uBACG3E,MAAM,CAACS,UAAP,GAAoB9B,MADvB,UACmCqB,MAAM,CAACS,UAD1C;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAQE,QAAC,CAAD,CAAG,WAAH;AAAA;AAAA;AAAA;AAAA,kBARF,eASE,QAAC,CAAD,CAAG,WAAH;AAAA;AAAA;AAAA;AAAA,kBATF,eAWE,QAAC,CAAD,CAAG,aAAH;AAAiB,YAAA,EAAE,EAAE,KAArB;AAA4B,YAAA,EAAE,EAAE,QAAhC;AAA0C,YAAA,EAAE,EAAE,eAA9C;AAAA,oCACE,QAAC,CAAD,CAAG,SAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAGE,QAAC,CAAD,CAAG,eAAH;AAAmB,cAAA,EAAE,EAAE,QAAvB;AAAiC,cAAA,EAAE,EAAE,QAArC;AAA+C,cAAA,EAAE,EAAE,KAAnD;AAAA,sCACE,QAAC,iBAAD;AACE,gBAAA,KAAK,EAAE;AAAEmE,kBAAAA,UAAU,EAAE;AAAd,iBADT;AAEE,gBAAA,QAAQ,EAAErG,WAAW,GAAG,CAAH,GAAO,CAF9B;AAGE,gBAAA,OAAO,EAAGsG,CAAD,IAAO;AACdA,kBAAAA,CAAC,CAACC,cAAF;AACAtC,kBAAAA,mBAAmB;AACpB,iBANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAWE,QAAC,CAAD,CAAG,YAAH;AAAA;AAAA;AAAA;AAAA,sBAXF,eAYE,QAAC,CAAD,CAAG,eAAH;AAAmB,gBAAA,KAAK,EAAE,gBAA1B;AAA4C,gBAAA,IAAI,EAAE,QAAlD;AAAA,0BACGzD;AADH;AAAA;AAAA;AAAA;AAAA,sBAZF,eAeE,QAAC,CAAD,CAAG,YAAH;AAAA;AAAA;AAAA;AAAA,sBAfF,eAgBE,QAAC,iBAAD;AACE,gBAAA,QAAQ,EAAER,WAAW,GAAG,CAAH,GAAO,CAD9B;AAEE,gBAAA,OAAO,EAAGsG,CAAD,IAAO;AACdA,kBAAAA,CAAC,CAACC,cAAF;AACAlC,kBAAAA,mBAAmB;AACpB,iBALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eA8BE,QAAC,CAAD,CAAG,SAAH;AACE,cAAA,KAAK,EAAE;AAAEmC,gBAAAA,MAAM,EAAE;AAAV,eADT;AAEE,cAAA,OAAO,EAAGF,CAAD,IAAO;AACdA,gBAAAA,CAAC,CAACC,cAAF;AACA/B,gBAAAA,OAAO;AACR,eALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,eAoDE,QAAC,CAAD,CAAG,WAAH;AAAA;AAAA;AAAA;AAAA,kBApDF,eAqDE,QAAC,CAAD,CAAG,IAAH;AAAA;AAAA;AAAA;AAAA,kBArDF,eAsDE,QAAC,CAAD,CAAG,WAAH;AAAA;AAAA;AAAA;AAAA,kBAtDF,eAuDE,QAAC,CAAD,CAAG,aAAH;AAAiB,YAAA,EAAE,EAAE,KAArB;AAA4B,YAAA,EAAE,EAAE,QAAhC;AAA0C,YAAA,EAAE,EAAE,eAA9C;AAAA,oCACE,QAAC,CAAD,CAAG,SAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,CAAD,CAAG,SAAH;AAAa,cAAA,KAAK,EAAE,gBAApB;AAAA,wBAAuC9D;AAAvC;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvDF,eA2DE,QAAC,CAAD,CAAG,WAAH;AAAA;AAAA;AAAA;AAAA,kBA3DF,eA4DE,QAAC,CAAD,CAAG,IAAH;AAAA;AAAA;AAAA;AAAA,kBA5DF,eA6DE,QAAC,CAAD,CAAG,WAAH;AAAA;AAAA;AAAA;AAAA,kBA7DF,eA8DE,QAAC,CAAD,CAAG,WAAH;AAAA;AAAA;AAAA;AAAA,kBA9DF,EA+DGb,UAAU,CAACyD,OAAX,KAAuB,EAAvB,IAA6BzD,UAAU,CAACmD,aAAX,KAA6B,IAA1D,IAAkEnD,UAAU,CAAC4G,QAAX,KAAwB,EAA1F,IACI5F,SAAS,KAAK,IADlB,IAC0Bf,KAAK,IAAI,CADnC,gBAGC,QAAC,CAAD,CAAG,SAAH;AAAa,YAAA,EAAE,EAAE,QAAjB;AAA2B,YAAA,EAAE,EAAE,QAA/B;AAAyC,YAAA,EAAE,EAAE,KAA7C;AAAA,oCACE,QAAC,CAAD,CAAG,aAAH;AACE,cAAA,QAAQ,EAAEiB,OADZ;AAEE,cAAA,OAAO,EAAGuF,CAAD,IAAO;AACdA,gBAAAA,CAAC,CAACC,cAAF;AACA9D,gBAAAA,SAAS;AACTiC,gBAAAA,OAAO;AACR,eANH;AAAA,yBAQG,GARH,EASG1E,WAAW,GAAG,+CAAH,GAAqD,MATnE,EAS2E,GAT3E,EAUGE,QAAQ,GAAGI,QAAH,GAAc,EAVzB,EAU6B,GAV7B;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAYqB,GAZrB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHD,gBAkBC;AAAA,mCAEE,QAAC,CAAD,CAAG,aAAH;AACE,cAAA,KAAK,EAAE;AACLoG,gBAAAA,SAAS,EAAE,QADN;AAELC,gBAAAA,KAAK,EAAE,qBAFF;AAGLH,gBAAAA,MAAM,EAAE;AAHH,eADT;AAME,cAAA,QAAQ,EAAE1G,KAAK,IAAI,CAAT,GAAa,CAAb,GAAiB,CAN7B;AAOE,cAAA,OAAO,EAAGwG,CAAD,IAAO;AACdA,gBAAAA,CAAC,CAACC,cAAF;AACA3G,gBAAAA,QAAQ,CAACd,aAAa,EAAd,CAAR;AACA4F,gBAAAA,OAAO;AACR,eAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF,2BAjFJ,eAsGE,QAAC,CAAD,CAAG,WAAH;AAAA;AAAA;AAAA;AAAA,kBAtGF,EAuGG7E,UAAU,CAAC4G,QAAX,KAAwB,EAAxB,gBACC,QAAC,CAAD,CAAG,aAAH;AACE,YAAA,KAAK,EAAE;AACLC,cAAAA,SAAS,EAAE,QADN;AAELC,cAAAA,KAAK,EAAE,mBAFF;AAGLH,cAAAA,MAAM,EAAE;AAHH,aADT;AAAA,sBAOG3G,UAAU,CAAC4G;AAPd;AAAA;AAAA;AAAA;AAAA,kBADD,GAWC,EAlHJ,EAsHI3G,KAAK,KAAK,CAAC,CAAZ,IAAoBA,KAAK,KAAK,CAA9B,gBACC,QAAC,CAAD,CAAG,aAAH;AACE,YAAA,KAAK,EAAE;AACL4G,cAAAA,SAAS,EAAE,QADN;AAELC,cAAAA,KAAK,EAAE,qBAFF;AAGLH,cAAAA,MAAM,EAAE;AAHH,aADT;AAAA,sBAOGlG;AAPH;AAAA;AAAA;AAAA;AAAA,kBADD,GAWC,EAjIJ,EAqIIO,SAAS,KAAK,IAAf,IAAyBf,KAAK,IAAI,CAAlC,gBACC,QAAC,CAAD,CAAG,aAAH;AACE,YAAA,KAAK,EAAE;AACL4G,cAAAA,SAAS,EAAE,QADN;AAELC,cAAAA,KAAK,EAAE,qBAFF;AAGLH,cAAAA,MAAM,EAAE;AAHH,aADT;AAAA,sBAOGlG;AAPH;AAAA;AAAA;AAAA;AAAA,kBADD,GAWC,EAhJJ,eAmJE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBAnJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eA4JE,QAAC,CAAD,CAAG,KAAH;AAAS,UAAA,GAAG,EAAE,qBAAd;AAAqC,UAAA,GAAG,EAAE;AAA1C;AAAA;AAAA;AAAA;AAAA,gBA5JF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAgKE,QAAC,CAAD,CAAG,WAAH;AAAA;AAAA;AAAA;AAAA,cAhKF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF,mBADF;AAwKD;;GA7YQZ,I;UAEUf,W,EACEC,W,EACNA,W;;;KAJNc,I;AA+YT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"../../redux/blockchain/blockchainActions\";\nimport { connectWallet } from \"../../redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./../../redux/data/dataActions\";\nimport { StyledRoundButton } from \"./../../components/styles/styledRoundButton.styled\";\nimport * as s from \"./../../styles/globalStyles\";\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport Social from \"../../components/SocialMedia/Social\";\nimport Loader from \"../../components/Loader/loader\";\n\nconst { createAlchemyWeb3, ethers } = require(\"@alch/alchemy-web3\");\nvar Web3 = require('web3');\nvar Contract = require('web3-eth-contract');\n\nfunction Home() {\n  let cost = 0.00;\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [mintDone, setMintDone] = useState(false);\n  const [supply, setTotalSupply] = useState(0);\n  const [feedback, setFeedback] = useState(\"\");\n  const [mintAmount, setMintAmount] = useState(1);\n  const [displayCost, setDisplayCost] = useState(cost);\n  const [state, setState] = useState(-1);\n  const [canMintWL, setCanMintWL] = useState(false);\n  const [disable, setDisable] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [nftCost, setNftCost] = useState(-1);\n  const [statusAlert, setStatusAlert] = useState(\"\");\n  const [max, setMax] = useState(0);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = 0;\n    if (state == 1) {\n      cost = CONFIG.WEI_COST_WL;\n    } else if (state == 2) {\n      cost = CONFIG.WEI_COST_PU;\n    }else{\n      cost = 0;\n    }\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}`);\n    setClaimingNft(true);\n    setDisable(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        setMintDone(true);\n        setFeedback(`Done , ${CONFIG.NFT_NAME} Is Yours!`);\n        setClaimingNft(false);\n        blockchain.smartContract.methods\n          .totalSupply()\n          .call()\n          .then((res) => {\n            setTotalSupply(res);\n          });\n\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n    setDisplayCost(\n      parseFloat(nftCost * newMintAmount).toFixed(2)\n    );\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 10) {\n      newMintAmount = 10;\n    }\n    setMintAmount(newMintAmount);\n    if(state == 1){\n      setDisplayCost(parseFloat(CONFIG.DISPLAY_COST_WL * newMintAmount).toFixed(3));\n  }else{\n      setDisplayCost(parseFloat(CONFIG.DISPLAY_COST_PU * newMintAmount).toFixed(3));\n  }\n  };\n\n  const maxNfts = () => {\n    if(state == 0 ){\n      setMintAmount(0);\n      setDisplayCost(0.00);\n    }\n    else if (state == 1) {\n      setMintAmount(CONFIG.MAX_LIMIT);\n      setDisplayCost(\n        parseFloat(CONFIG.DISPLAY_COST_WL * CONFIG.MAX_LIMIT).toFixed(3)\n      );\n    } else {\n      setMintAmount(CONFIG.MAX_LIMIT);\n      setDisplayCost(parseFloat(CONFIG.DISPLAY_COST_PU * CONFIG.MAX_LIMIT).toFixed(3));\n    }\n  };\n\n  const getData = async () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n      const totalSupply = await blockchain.smartContract.methods\n        .totalSupply()\n        .call();\n      setTotalSupply(totalSupply);\n      let currentState = await blockchain.smartContract.methods\n        .currentState()\n        .call();\n      console.log({ currentState });\n      setState(currentState);\n\n    if (currentState == 1) {\n        let mintWL = await blockchain.smartContract.methods\n          .isWhitelisted(blockchain.account)\n          .call();\n          console.log({ mintWL });\n        setCanMintWL(mintWL);\n        (mintWL) ? \"\" : setFeedback(`This wallet is not on the Whitelist`);\n        (mintWL) ? setDisable(false) : setDisable(true);\n\n        setDisplayCost(CONFIG.DISPLAY_COST_WL);\n      } else {\n        setDisplayCost(CONFIG.DISPLAY_COST_PU);\n      }\n    }\n  };\n\n  const getDataWithAlchemy = async () => {\n    const web3 = createAlchemyWeb3(\"https://eth-rinkeby.alchemyapi.io/v2/r6eG6CaBZCKMgr9n_LtLiBdruY9DwF_v\");\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    var contract = new Contract(abi, '0xE4B000466c79C01235F912EDFc275a8105B2B360');\n    contract.setProvider(web3.currentProvider);\n    // Get Total Supply\n    const totalSupply = await contract.methods\n      .totalSupply()\n      .call();\n    setTotalSupply(totalSupply);\n\n    // Get Contract State\n    let currentState = await contract.methods\n      .currentState()\n      .call();\n    setState(currentState);\n    console.log(currentState);\n\n    // Set Price and Max According to State\n\n    if (currentState == 0) {\n      setStatusAlert(\"MINT NOT LIVE YET!\");\n      setDisable(true);\n      setDisplayCost(0.00);\n      setMax(0);\n    }\n    else if (currentState == 1) {\n      let wlCost = await contract.methods\n        .costWL()\n        .call();\n      setDisplayCost(web3.utils.fromWei(wlCost));\n      setNftCost(web3.utils.fromWei(wlCost));\n      setStatusAlert(\"WHITELIST IS NOW LIVE!\");\n      setFeedback(\"Are you Whitelisted Member?\");\n\n      let wlMax = await contract.methods\n        .maxMintAmount()\n        .call();\n      setMax(wlMax);\n    }\n    else {\n      let puCost = await contract.methods\n        .cost()\n        .call();\n      setDisplayCost(web3.utils.fromWei(puCost));\n      setNftCost(web3.utils.fromWei(puCost));\n      setStatusAlert(\"Public Mint is Live\");\n      let puMax = await contract.methods\n        .maxMintAmount()\n        .call();\n      setMax(puMax);\n    }\n\n  }\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n    getDataWithAlchemy();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <>\n\n      <s.Body>\n        <Navbar />\n        <s.FlexContainer\n          jc={\"space-between\"}\n          ai={\"center\"}\n          fd={\"row\"}\n          mt={\"25vh\"}\n        >\n          <s.Image src={\"config/images/1.png\"} wid={\"25\"} />\n          <s.Mint>\n            <s.TextTitle size={6.0} style={{ letterSpacing: \"3px\" }}>\n              MINT NOW\n            </s.TextTitle>\n            <s.SpacerSmall />\n            <s.TextSubTitle size={1.4}>\n              {CONFIG.MAX_SUPPLY - supply} of {CONFIG.MAX_SUPPLY}   NFT's Available\n            </s.TextSubTitle>\n            <s.SpacerLarge />\n            <s.SpacerLarge />\n\n            <s.FlexContainer fd={\"row\"} ai={\"center\"} jc={\"space-between\"}>\n              <s.TextTitle>Amount</s.TextTitle>\n\n              <s.AmountContainer ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                <StyledRoundButton\n                  style={{ lineHeight: 0.4 }}\n                  disabled={claimingNft ? 1 : 0}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    decrementMintAmount();\n                  }}\n                >\n                  -\n                </StyledRoundButton>\n                <s.SpacerMedium />\n                <s.TextDescription color={\"var(--primary)\"} size={\"2.5rem\"}>\n                  {mintAmount}\n                </s.TextDescription>\n                <s.SpacerMedium />\n                <StyledRoundButton\n                  disabled={claimingNft ? 1 : 0}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    incrementMintAmount();\n                  }}\n                >\n                  +\n                </StyledRoundButton>\n              </s.AmountContainer>\n\n              <s.maxButton\n                style={{ cursor: \"pointer\" }}\n                onClick={(e) => {\n                  e.preventDefault();\n                  maxNfts();\n                }}\n              >\n                Max\n              </s.maxButton>\n            </s.FlexContainer>\n\n            <s.SpacerSmall />\n            <s.Line />\n            <s.SpacerLarge />\n            <s.FlexContainer fd={\"row\"} ai={\"center\"} jc={\"space-between\"}>\n              <s.TextTitle>Total</s.TextTitle>\n              <s.TextTitle color={\"var(--primary)\"}>{displayCost}</s.TextTitle>\n            </s.FlexContainer>\n            <s.SpacerSmall />\n            <s.Line />\n            <s.SpacerSmall />\n            <s.SpacerLarge />\n            {blockchain.account !== \"\" && blockchain.smartContract !== null && blockchain.errorMsg === \"\"\n              && canMintWL === true && state == 1\n            ? (\n              <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                <s.connectButton\n                  disabled={disable}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    claimNFTs();\n                    getData();\n                  }}\n                >\n                  {\" \"}\n                  {claimingNft ? \"Please Confirm the Transaction in Your Wallet\" : \"Mint\"}{\" \"}\n                  {mintDone ? feedback : \"\"}{\" \"}\n                </s.connectButton>{\" \"}\n              </s.Container>\n            ) : (\n              <>\n                {/* {blockchain.errorMsg === \"\" ? ( */}\n                <s.connectButton\n                  style={{\n                    textAlign: \"center\",\n                    color: \"var(--primary-text)\",\n                    cursor: \"pointer\",\n                  }}\n                  disabled={state == 0 ? 1 : 0}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    dispatch(connectWallet());\n                    getData();\n                  }}\n                >\n                  Connect Your Wallet\n                </s.connectButton>\n                {/* ) : (\"\")} */}\n              </>\n\n            )}\n            <s.SpacerLarge />\n            {blockchain.errorMsg !== \"\" ? (\n              <s.connectButton\n                style={{\n                  textAlign: \"center\",\n                  color: \"var(primary-text)\",\n                  cursor: \"pointer\",\n                }}\n              >\n                {blockchain.errorMsg}\n              </s.connectButton>\n            ) : (\n              \"\"\n\n            )}\n\n            {(state !== -1 ) && (state === 0) ? (\n              <s.connectButton\n                style={{\n                  textAlign: \"center\",\n                  color: \"var(--primary-text)\",\n                  cursor: \"pointer\",\n                }}\n              >\n                {feedback}\n              </s.connectButton>\n            ) : (\n              \"\"\n\n            )}\n\n            {(canMintWL !== true) && (state == 1) ? (\n              <s.connectButton\n                style={{\n                  textAlign: \"center\",\n                  color: \"var(--primary-text)\",\n                  cursor: \"pointer\",\n                }}\n              >\n                {feedback}\n              </s.connectButton>\n            ) : (\n              \"\"\n\n            )}\n            <Social />\n          </s.Mint>\n          <s.Image src={\"config/images/2.png\"} wid={\"25\"} />\n        </s.FlexContainer>\n        <s.SpacerLarge />\n      </s.Body>\n\n    </>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}