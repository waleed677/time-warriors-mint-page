{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function pairwise() {\n  return function (source) {\n    return source.lift(new PairwiseOperator());\n  };\n}\n\nvar PairwiseOperator = function () {\n  function PairwiseOperator() {}\n\n  PairwiseOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new PairwiseSubscriber(subscriber));\n  };\n\n  return PairwiseOperator;\n}();\n\nvar PairwiseSubscriber = function (_super) {\n  tslib_1.__extends(PairwiseSubscriber, _super);\n\n  function PairwiseSubscriber(destination) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.hasPrev = false;\n    return _this;\n  }\n\n  PairwiseSubscriber.prototype._next = function (value) {\n    var pair;\n\n    if (this.hasPrev) {\n      pair = [this.prev, value];\n    } else {\n      this.hasPrev = true;\n    }\n\n    this.prev = value;\n\n    if (pair) {\n      this.destination.next(pair);\n    }\n  };\n\n  return PairwiseSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/pairwise.ts"],"names":[],"mappings":";AAEA,OAAO,KAAE,OAAT,MAAqB,OAArB;AA8CA,SAAM,UAAN,QAAwB,eAAxB;AACE,OAAA,SAAO,QAAP,GAA6B;AAC9B,SAAA,UAAA,MAAA,EAAA;AAAA,WAAA,MAAA,CAAA,IAAA,CAAA,IAAA,gBAAA,EAAA,CAAA;AAAA,GAAA;AAED;;IAAA,gBAAA,GAAA,YAAA;AAIA,WAAC,gBAAD,GAAC,CAHC;;AACE,EAAA,gBAAO,CAAM,SAAb,CAAuB,IAAvB,GAA4B,UAAA,UAAA,EAAmB,MAAnB,EAAgC;AAC7D,WAAA,MAAA,CAAA,SAAA,CAAA,IAAA,kBAAA,CAAA,UAAA,CAAA,CAAA;AACH,GAFI;;AAEH,SAAA,gBAAA;AAOD,CAXA,E;;IAWoC,kBAAA,GAAA,UAAa,MAAb,EAAa;AAI/C,EAAA,OAAA,CAAA,SAAA,CAAA,kBAAA,EAAY,MAAZ;;AAAA,WAAA,kBAAA,CACE,WADF,EACQ;AAHA,QAAA,KAAA,GAAA,MAAmB,CAAA,IAAnB,CAAyB,IAAzB,EAAyB,WAAzB,KAAyB,IAAzB;;;AAIP,WAAA,KAAA;AAED;;AACE,EAAA,kBAA6B,CAAA,SAA7B,CAA6B,KAA7B,GAA6B,UAAA,KAAA,EAAA;AAE7B,QAAI,IAAJ;;QACE,KAAI,O,EAAS;AACd,MAAA,IAAA,GAAA,CAAA,KAAA,IAAA,EAAA,KAAA,CAAA;AAAM,K,MACL;AACD,WAAA,OAAA,GAAA,IAAA;AAED;;AAEA,SAAI,IAAJ,GAAU,KAAV;;QACE,I,EAAK;AACN,WAAA,WAAA,CAAA,IAAA,CAAA,IAAA;AACF;AACH,GAdI;;AATgC,SAAA,kBAAA;CAAA,C,UAAA,C","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Subscriber } from '../Subscriber';\r\nexport function pairwise() {\r\n    return function (source) { return source.lift(new PairwiseOperator()); };\r\n}\r\nvar PairwiseOperator = /*@__PURE__*/ (function () {\r\n    function PairwiseOperator() {\r\n    }\r\n    PairwiseOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new PairwiseSubscriber(subscriber));\r\n    };\r\n    return PairwiseOperator;\r\n}());\r\nvar PairwiseSubscriber = /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(PairwiseSubscriber, _super);\r\n    function PairwiseSubscriber(destination) {\r\n        var _this = _super.call(this, destination) || this;\r\n        _this.hasPrev = false;\r\n        return _this;\r\n    }\r\n    PairwiseSubscriber.prototype._next = function (value) {\r\n        var pair;\r\n        if (this.hasPrev) {\r\n            pair = [this.prev, value];\r\n        }\r\n        else {\r\n            this.hasPrev = true;\r\n        }\r\n        this.prev = value;\r\n        if (pair) {\r\n            this.destination.next(pair);\r\n        }\r\n    };\r\n    return PairwiseSubscriber;\r\n}(Subscriber));\r\n//# sourceMappingURL=pairwise.js.map\r\n"]},"metadata":{},"sourceType":"module"}