{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getWindowMetadata = void 0;\n\nconst window_getters_1 = require(\"@walletconnect/window-getters\");\n\nfunction getWindowMetadata() {\n  let doc;\n  let loc;\n\n  try {\n    doc = window_getters_1.getDocumentOrThrow();\n    loc = window_getters_1.getLocationOrThrow();\n  } catch (e) {\n    return null;\n  }\n\n  function getIcons() {\n    const links = doc.getElementsByTagName(\"link\");\n    const icons = [];\n\n    for (let i = 0; i < links.length; i++) {\n      const link = links[i];\n      const rel = link.getAttribute(\"rel\");\n\n      if (rel) {\n        if (rel.toLowerCase().indexOf(\"icon\") > -1) {\n          const href = link.getAttribute(\"href\");\n\n          if (href) {\n            if (href.toLowerCase().indexOf(\"https:\") === -1 && href.toLowerCase().indexOf(\"http:\") === -1 && href.indexOf(\"//\") !== 0) {\n              let absoluteHref = loc.protocol + \"//\" + loc.host;\n\n              if (href.indexOf(\"/\") === 0) {\n                absoluteHref += href;\n              } else {\n                const path = loc.pathname.split(\"/\");\n                path.pop();\n                const finalPath = path.join(\"/\");\n                absoluteHref += finalPath + \"/\" + href;\n              }\n\n              icons.push(absoluteHref);\n            } else if (href.indexOf(\"//\") === 0) {\n              const absoluteUrl = loc.protocol + href;\n              icons.push(absoluteUrl);\n            } else {\n              icons.push(href);\n            }\n          }\n        }\n      }\n    }\n\n    return icons;\n  }\n\n  function getWindowMetadataOfAny(...args) {\n    const metaTags = doc.getElementsByTagName(\"meta\");\n\n    for (let i = 0; i < metaTags.length; i++) {\n      const tag = metaTags[i];\n      const attributes = [\"itemprop\", \"property\", \"name\"].map(target => tag.getAttribute(target)).filter(attr => {\n        if (attr) {\n          return args.includes(attr);\n        }\n\n        return false;\n      });\n\n      if (attributes.length && attributes) {\n        const content = tag.getAttribute(\"content\");\n\n        if (content) {\n          return content;\n        }\n      }\n    }\n\n    return \"\";\n  }\n\n  function getName() {\n    let name = getWindowMetadataOfAny(\"name\", \"og:site_name\", \"og:title\", \"twitter:title\");\n\n    if (!name) {\n      name = doc.title;\n    }\n\n    return name;\n  }\n\n  function getDescription() {\n    const description = getWindowMetadataOfAny(\"description\", \"og:description\", \"twitter:description\", \"keywords\");\n    return description;\n  }\n\n  const name = getName();\n  const description = getDescription();\n  const url = loc.origin;\n  const icons = getIcons();\n  const meta = {\n    description,\n    url,\n    icons,\n    name\n  };\n  return meta;\n}\n\nexports.getWindowMetadata = getWindowMetadata;","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getWindowMetadata = void 0;\r\nconst window_getters_1 = require(\"@walletconnect/window-getters\");\r\nfunction getWindowMetadata() {\r\n    let doc;\r\n    let loc;\r\n    try {\r\n        doc = window_getters_1.getDocumentOrThrow();\r\n        loc = window_getters_1.getLocationOrThrow();\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    function getIcons() {\r\n        const links = doc.getElementsByTagName(\"link\");\r\n        const icons = [];\r\n        for (let i = 0; i < links.length; i++) {\r\n            const link = links[i];\r\n            const rel = link.getAttribute(\"rel\");\r\n            if (rel) {\r\n                if (rel.toLowerCase().indexOf(\"icon\") > -1) {\r\n                    const href = link.getAttribute(\"href\");\r\n                    if (href) {\r\n                        if (href.toLowerCase().indexOf(\"https:\") === -1 &&\r\n                            href.toLowerCase().indexOf(\"http:\") === -1 &&\r\n                            href.indexOf(\"//\") !== 0) {\r\n                            let absoluteHref = loc.protocol + \"//\" + loc.host;\r\n                            if (href.indexOf(\"/\") === 0) {\r\n                                absoluteHref += href;\r\n                            }\r\n                            else {\r\n                                const path = loc.pathname.split(\"/\");\r\n                                path.pop();\r\n                                const finalPath = path.join(\"/\");\r\n                                absoluteHref += finalPath + \"/\" + href;\r\n                            }\r\n                            icons.push(absoluteHref);\r\n                        }\r\n                        else if (href.indexOf(\"//\") === 0) {\r\n                            const absoluteUrl = loc.protocol + href;\r\n                            icons.push(absoluteUrl);\r\n                        }\r\n                        else {\r\n                            icons.push(href);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return icons;\r\n    }\r\n    function getWindowMetadataOfAny(...args) {\r\n        const metaTags = doc.getElementsByTagName(\"meta\");\r\n        for (let i = 0; i < metaTags.length; i++) {\r\n            const tag = metaTags[i];\r\n            const attributes = [\"itemprop\", \"property\", \"name\"]\r\n                .map((target) => tag.getAttribute(target))\r\n                .filter((attr) => {\r\n                if (attr) {\r\n                    return args.includes(attr);\r\n                }\r\n                return false;\r\n            });\r\n            if (attributes.length && attributes) {\r\n                const content = tag.getAttribute(\"content\");\r\n                if (content) {\r\n                    return content;\r\n                }\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n    function getName() {\r\n        let name = getWindowMetadataOfAny(\"name\", \"og:site_name\", \"og:title\", \"twitter:title\");\r\n        if (!name) {\r\n            name = doc.title;\r\n        }\r\n        return name;\r\n    }\r\n    function getDescription() {\r\n        const description = getWindowMetadataOfAny(\"description\", \"og:description\", \"twitter:description\", \"keywords\");\r\n        return description;\r\n    }\r\n    const name = getName();\r\n    const description = getDescription();\r\n    const url = loc.origin;\r\n    const icons = getIcons();\r\n    const meta = {\r\n        description,\r\n        url,\r\n        icons,\r\n        name,\r\n    };\r\n    return meta;\r\n}\r\nexports.getWindowMetadata = getWindowMetadata;\r\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}