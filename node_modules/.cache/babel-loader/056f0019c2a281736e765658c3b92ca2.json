{"ast":null,"code":"import { isBrowser, getLocation, getQueryString, detectEnv, appendToQueryString } from \"@walletconnect/utils\";\nimport NetworkMonitor from \"./network\";\nconst WS = typeof global.WebSocket !== \"undefined\" ? global.WebSocket : require(\"ws\");\n\nclass SocketTransport {\n  constructor(opts) {\n    this.opts = opts;\n    this._queue = [];\n    this._events = [];\n    this._subscriptions = [];\n    this._protocol = opts.protocol;\n    this._version = opts.version;\n    this._url = \"\";\n    this._netMonitor = null;\n    this._socket = null;\n    this._nextSocket = null;\n    this._subscriptions = opts.subscriptions || [];\n    this._netMonitor = opts.netMonitor || new NetworkMonitor();\n\n    if (!opts.url || typeof opts.url !== \"string\") {\n      throw new Error(\"Missing or invalid WebSocket url\");\n    }\n\n    this._url = opts.url;\n\n    this._netMonitor.on(\"online\", () => this._socketCreate());\n  }\n\n  set readyState(value) {}\n\n  get readyState() {\n    return this._socket ? this._socket.readyState : -1;\n  }\n\n  set connecting(value) {}\n\n  get connecting() {\n    return this.readyState === 0;\n  }\n\n  set connected(value) {}\n\n  get connected() {\n    return this.readyState === 1;\n  }\n\n  set closing(value) {}\n\n  get closing() {\n    return this.readyState === 2;\n  }\n\n  set closed(value) {}\n\n  get closed() {\n    return this.readyState === 3;\n  }\n\n  open() {\n    this._socketCreate();\n  }\n\n  close() {\n    this._socketClose();\n  }\n\n  send(message, topic, silent) {\n    if (!topic || typeof topic !== \"string\") {\n      throw new Error(\"Missing or invalid topic field\");\n    }\n\n    this._socketSend({\n      topic: topic,\n      type: \"pub\",\n      payload: message,\n      silent: !!silent\n    });\n  }\n\n  subscribe(topic) {\n    this._socketSend({\n      topic: topic,\n      type: \"sub\",\n      payload: \"\",\n      silent: true\n    });\n  }\n\n  on(event, callback) {\n    this._events.push({\n      event,\n      callback\n    });\n  }\n\n  _socketCreate() {\n    if (this._nextSocket) {\n      return;\n    }\n\n    const url = getWebSocketUrl(this._url, this._protocol, this._version);\n    this._nextSocket = new WS(url);\n\n    if (!this._nextSocket) {\n      throw new Error(\"Failed to create socket\");\n    }\n\n    this._nextSocket.onmessage = event => this._socketReceive(event);\n\n    this._nextSocket.onopen = () => this._socketOpen();\n\n    this._nextSocket.onerror = event => this._socketError(event);\n\n    this._nextSocket.onclose = () => {\n      setTimeout(() => {\n        this._nextSocket = null;\n\n        this._socketCreate();\n      }, 1000);\n    };\n  }\n\n  _socketOpen() {\n    this._socketClose();\n\n    this._socket = this._nextSocket;\n    this._nextSocket = null;\n\n    this._queueSubscriptions();\n\n    this._pushQueue();\n  }\n\n  _socketClose() {\n    if (this._socket) {\n      this._socket.onclose = () => {};\n\n      this._socket.close();\n    }\n  }\n\n  _socketSend(socketMessage) {\n    const message = JSON.stringify(socketMessage);\n\n    if (this._socket && this._socket.readyState === 1) {\n      this._socket.send(message);\n    } else {\n      this._setToQueue(socketMessage);\n\n      this._socketCreate();\n    }\n  }\n\n  async _socketReceive(event) {\n    let socketMessage;\n\n    try {\n      socketMessage = JSON.parse(event.data);\n    } catch (error) {\n      return;\n    }\n\n    this._socketSend({\n      topic: socketMessage.topic,\n      type: \"ack\",\n      payload: \"\",\n      silent: true\n    });\n\n    if (this._socket && this._socket.readyState === 1) {\n      const events = this._events.filter(event => event.event === \"message\");\n\n      if (events && events.length) {\n        events.forEach(event => event.callback(socketMessage));\n      }\n    }\n  }\n\n  _socketError(e) {\n    const events = this._events.filter(event => event.event === \"error\");\n\n    if (events && events.length) {\n      events.forEach(event => event.callback(e));\n    }\n  }\n\n  _queueSubscriptions() {\n    const subscriptions = this._subscriptions;\n    subscriptions.forEach(topic => this._queue.push({\n      topic: topic,\n      type: \"sub\",\n      payload: \"\",\n      silent: true\n    }));\n    this._subscriptions = this.opts.subscriptions || [];\n  }\n\n  _setToQueue(socketMessage) {\n    this._queue.push(socketMessage);\n  }\n\n  _pushQueue() {\n    const queue = this._queue;\n    queue.forEach(socketMessage => this._socketSend(socketMessage));\n    this._queue = [];\n  }\n\n}\n\nfunction getWebSocketUrl(_url, protocol, version) {\n  var _a, _b;\n\n  const url = _url.startsWith(\"https\") ? _url.replace(\"https\", \"wss\") : _url.startsWith(\"http\") ? _url.replace(\"http\", \"ws\") : _url;\n  const splitUrl = url.split(\"?\");\n  const params = isBrowser() ? {\n    protocol,\n    version,\n    env: \"browser\",\n    host: ((_a = getLocation()) === null || _a === void 0 ? void 0 : _a.host) || \"\"\n  } : {\n    protocol,\n    version,\n    env: ((_b = detectEnv()) === null || _b === void 0 ? void 0 : _b.name) || \"\"\n  };\n  const queryString = appendToQueryString(getQueryString(splitUrl[1] || \"\"), params);\n  return splitUrl[0] + \"?\" + queryString;\n}\n\nexport default SocketTransport;","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { isBrowser, getLocation, getQueryString, detectEnv, appendToQueryString, } from \"@walletconnect/utils\";\r\nimport NetworkMonitor from \"./network\";\r\nconst WS = typeof global.WebSocket !== \"undefined\" ? global.WebSocket : require(\"ws\");\r\nclass SocketTransport {\r\n    constructor(opts) {\r\n        this.opts = opts;\r\n        this._queue = [];\r\n        this._events = [];\r\n        this._subscriptions = [];\r\n        this._protocol = opts.protocol;\r\n        this._version = opts.version;\r\n        this._url = \"\";\r\n        this._netMonitor = null;\r\n        this._socket = null;\r\n        this._nextSocket = null;\r\n        this._subscriptions = opts.subscriptions || [];\r\n        this._netMonitor = opts.netMonitor || new NetworkMonitor();\r\n        if (!opts.url || typeof opts.url !== \"string\") {\r\n            throw new Error(\"Missing or invalid WebSocket url\");\r\n        }\r\n        this._url = opts.url;\r\n        this._netMonitor.on(\"online\", () => this._socketCreate());\r\n    }\r\n    set readyState(value) {\r\n    }\r\n    get readyState() {\r\n        return this._socket ? this._socket.readyState : -1;\r\n    }\r\n    set connecting(value) {\r\n    }\r\n    get connecting() {\r\n        return this.readyState === 0;\r\n    }\r\n    set connected(value) {\r\n    }\r\n    get connected() {\r\n        return this.readyState === 1;\r\n    }\r\n    set closing(value) {\r\n    }\r\n    get closing() {\r\n        return this.readyState === 2;\r\n    }\r\n    set closed(value) {\r\n    }\r\n    get closed() {\r\n        return this.readyState === 3;\r\n    }\r\n    open() {\r\n        this._socketCreate();\r\n    }\r\n    close() {\r\n        this._socketClose();\r\n    }\r\n    send(message, topic, silent) {\r\n        if (!topic || typeof topic !== \"string\") {\r\n            throw new Error(\"Missing or invalid topic field\");\r\n        }\r\n        this._socketSend({\r\n            topic: topic,\r\n            type: \"pub\",\r\n            payload: message,\r\n            silent: !!silent,\r\n        });\r\n    }\r\n    subscribe(topic) {\r\n        this._socketSend({\r\n            topic: topic,\r\n            type: \"sub\",\r\n            payload: \"\",\r\n            silent: true,\r\n        });\r\n    }\r\n    on(event, callback) {\r\n        this._events.push({ event, callback });\r\n    }\r\n    _socketCreate() {\r\n        if (this._nextSocket) {\r\n            return;\r\n        }\r\n        const url = getWebSocketUrl(this._url, this._protocol, this._version);\r\n        this._nextSocket = new WS(url);\r\n        if (!this._nextSocket) {\r\n            throw new Error(\"Failed to create socket\");\r\n        }\r\n        this._nextSocket.onmessage = (event) => this._socketReceive(event);\r\n        this._nextSocket.onopen = () => this._socketOpen();\r\n        this._nextSocket.onerror = (event) => this._socketError(event);\r\n        this._nextSocket.onclose = () => {\r\n            setTimeout(() => {\r\n                this._nextSocket = null;\r\n                this._socketCreate();\r\n            }, 1000);\r\n        };\r\n    }\r\n    _socketOpen() {\r\n        this._socketClose();\r\n        this._socket = this._nextSocket;\r\n        this._nextSocket = null;\r\n        this._queueSubscriptions();\r\n        this._pushQueue();\r\n    }\r\n    _socketClose() {\r\n        if (this._socket) {\r\n            this._socket.onclose = () => {\r\n            };\r\n            this._socket.close();\r\n        }\r\n    }\r\n    _socketSend(socketMessage) {\r\n        const message = JSON.stringify(socketMessage);\r\n        if (this._socket && this._socket.readyState === 1) {\r\n            this._socket.send(message);\r\n        }\r\n        else {\r\n            this._setToQueue(socketMessage);\r\n            this._socketCreate();\r\n        }\r\n    }\r\n    async _socketReceive(event) {\r\n        let socketMessage;\r\n        try {\r\n            socketMessage = JSON.parse(event.data);\r\n        }\r\n        catch (error) {\r\n            return;\r\n        }\r\n        this._socketSend({\r\n            topic: socketMessage.topic,\r\n            type: \"ack\",\r\n            payload: \"\",\r\n            silent: true,\r\n        });\r\n        if (this._socket && this._socket.readyState === 1) {\r\n            const events = this._events.filter(event => event.event === \"message\");\r\n            if (events && events.length) {\r\n                events.forEach(event => event.callback(socketMessage));\r\n            }\r\n        }\r\n    }\r\n    _socketError(e) {\r\n        const events = this._events.filter(event => event.event === \"error\");\r\n        if (events && events.length) {\r\n            events.forEach(event => event.callback(e));\r\n        }\r\n    }\r\n    _queueSubscriptions() {\r\n        const subscriptions = this._subscriptions;\r\n        subscriptions.forEach((topic) => this._queue.push({\r\n            topic: topic,\r\n            type: \"sub\",\r\n            payload: \"\",\r\n            silent: true,\r\n        }));\r\n        this._subscriptions = this.opts.subscriptions || [];\r\n    }\r\n    _setToQueue(socketMessage) {\r\n        this._queue.push(socketMessage);\r\n    }\r\n    _pushQueue() {\r\n        const queue = this._queue;\r\n        queue.forEach((socketMessage) => this._socketSend(socketMessage));\r\n        this._queue = [];\r\n    }\r\n}\r\nfunction getWebSocketUrl(_url, protocol, version) {\r\n    var _a, _b;\r\n    const url = _url.startsWith(\"https\")\r\n        ? _url.replace(\"https\", \"wss\")\r\n        : _url.startsWith(\"http\")\r\n            ? _url.replace(\"http\", \"ws\")\r\n            : _url;\r\n    const splitUrl = url.split(\"?\");\r\n    const params = isBrowser()\r\n        ? {\r\n            protocol,\r\n            version,\r\n            env: \"browser\",\r\n            host: ((_a = getLocation()) === null || _a === void 0 ? void 0 : _a.host) || \"\",\r\n        }\r\n        : {\r\n            protocol,\r\n            version,\r\n            env: ((_b = detectEnv()) === null || _b === void 0 ? void 0 : _b.name) || \"\",\r\n        };\r\n    const queryString = appendToQueryString(getQueryString(splitUrl[1] || \"\"), params);\r\n    return splitUrl[0] + \"?\" + queryString;\r\n}\r\nexport default SocketTransport;\r\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}