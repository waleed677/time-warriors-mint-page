{"ast":null,"code":"/*\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\n\n/**\r\n * @file index.js\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\n\"use strict\";\n\nvar core = require('web3-core');\n\nvar Method = require('web3-core-method');\n\nvar utils = require('web3-utils');\n\nvar Net = require('web3-net');\n\nvar formatters = require('web3-core-helpers').formatters;\n\nvar Personal = function Personal() {\n  var _this = this; // sets _requestmanager\n\n\n  core.packageInit(this, arguments);\n  this.net = new Net(this);\n  var defaultAccount = null;\n  var defaultBlock = 'latest';\n  Object.defineProperty(this, 'defaultAccount', {\n    get: function () {\n      return defaultAccount;\n    },\n    set: function (val) {\n      if (val) {\n        defaultAccount = utils.toChecksumAddress(formatters.inputAddressFormatter(val));\n      } // update defaultBlock\n\n\n      methods.forEach(function (method) {\n        method.defaultAccount = defaultAccount;\n      });\n      return val;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultBlock', {\n    get: function () {\n      return defaultBlock;\n    },\n    set: function (val) {\n      defaultBlock = val; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.defaultBlock = defaultBlock;\n      });\n      return val;\n    },\n    enumerable: true\n  });\n  var methods = [new Method({\n    name: 'getAccounts',\n    call: 'personal_listAccounts',\n    params: 0,\n    outputFormatter: utils.toChecksumAddress\n  }), new Method({\n    name: 'newAccount',\n    call: 'personal_newAccount',\n    params: 1,\n    inputFormatter: [null],\n    outputFormatter: utils.toChecksumAddress\n  }), new Method({\n    name: 'unlockAccount',\n    call: 'personal_unlockAccount',\n    params: 3,\n    inputFormatter: [formatters.inputAddressFormatter, null, null]\n  }), new Method({\n    name: 'lockAccount',\n    call: 'personal_lockAccount',\n    params: 1,\n    inputFormatter: [formatters.inputAddressFormatter]\n  }), new Method({\n    name: 'importRawKey',\n    call: 'personal_importRawKey',\n    params: 2\n  }), new Method({\n    name: 'sendTransaction',\n    call: 'personal_sendTransaction',\n    params: 2,\n    inputFormatter: [formatters.inputTransactionFormatter, null]\n  }), new Method({\n    name: 'signTransaction',\n    call: 'personal_signTransaction',\n    params: 2,\n    inputFormatter: [formatters.inputTransactionFormatter, null]\n  }), new Method({\n    name: 'sign',\n    call: 'personal_sign',\n    params: 3,\n    inputFormatter: [formatters.inputSignFormatter, formatters.inputAddressFormatter, null]\n  }), new Method({\n    name: 'ecRecover',\n    call: 'personal_ecRecover',\n    params: 2,\n    inputFormatter: [formatters.inputSignFormatter, null]\n  })];\n  methods.forEach(function (method) {\n    method.attachToObject(_this);\n    method.setRequestManager(_this._requestManager);\n    method.defaultBlock = _this.defaultBlock;\n    method.defaultAccount = _this.defaultAccount;\n  });\n};\n\ncore.addProviders(Personal);\nmodule.exports = Personal;","map":{"version":3,"sources":["E:/Freelancing/blockchain/time-warriors-mint-page/node_modules/web3-eth-personal/lib/index.js"],"names":["core","require","Method","utils","Net","formatters","Personal","_this","packageInit","arguments","net","defaultAccount","defaultBlock","Object","defineProperty","get","set","val","toChecksumAddress","inputAddressFormatter","methods","forEach","method","enumerable","name","call","params","outputFormatter","inputFormatter","inputTransactionFormatter","inputSignFormatter","attachToObject","setRequestManager","_requestManager","addProviders","module","exports"],"mappings":"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","sourcesContent":["/*\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n/**\r\n * @file index.js\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\r\n\"use strict\";\r\nvar core = require('web3-core');\r\nvar Method = require('web3-core-method');\r\nvar utils = require('web3-utils');\r\nvar Net = require('web3-net');\r\nvar formatters = require('web3-core-helpers').formatters;\r\nvar Personal = function Personal() {\r\n    var _this = this;\r\n    // sets _requestmanager\r\n    core.packageInit(this, arguments);\r\n    this.net = new Net(this);\r\n    var defaultAccount = null;\r\n    var defaultBlock = 'latest';\r\n    Object.defineProperty(this, 'defaultAccount', {\r\n        get: function () {\r\n            return defaultAccount;\r\n        },\r\n        set: function (val) {\r\n            if (val) {\r\n                defaultAccount = utils.toChecksumAddress(formatters.inputAddressFormatter(val));\r\n            }\r\n            // update defaultBlock\r\n            methods.forEach(function (method) {\r\n                method.defaultAccount = defaultAccount;\r\n            });\r\n            return val;\r\n        },\r\n        enumerable: true\r\n    });\r\n    Object.defineProperty(this, 'defaultBlock', {\r\n        get: function () {\r\n            return defaultBlock;\r\n        },\r\n        set: function (val) {\r\n            defaultBlock = val;\r\n            // update defaultBlock\r\n            methods.forEach(function (method) {\r\n                method.defaultBlock = defaultBlock;\r\n            });\r\n            return val;\r\n        },\r\n        enumerable: true\r\n    });\r\n    var methods = [\r\n        new Method({\r\n            name: 'getAccounts',\r\n            call: 'personal_listAccounts',\r\n            params: 0,\r\n            outputFormatter: utils.toChecksumAddress\r\n        }),\r\n        new Method({\r\n            name: 'newAccount',\r\n            call: 'personal_newAccount',\r\n            params: 1,\r\n            inputFormatter: [null],\r\n            outputFormatter: utils.toChecksumAddress\r\n        }),\r\n        new Method({\r\n            name: 'unlockAccount',\r\n            call: 'personal_unlockAccount',\r\n            params: 3,\r\n            inputFormatter: [formatters.inputAddressFormatter, null, null]\r\n        }),\r\n        new Method({\r\n            name: 'lockAccount',\r\n            call: 'personal_lockAccount',\r\n            params: 1,\r\n            inputFormatter: [formatters.inputAddressFormatter]\r\n        }),\r\n        new Method({\r\n            name: 'importRawKey',\r\n            call: 'personal_importRawKey',\r\n            params: 2\r\n        }),\r\n        new Method({\r\n            name: 'sendTransaction',\r\n            call: 'personal_sendTransaction',\r\n            params: 2,\r\n            inputFormatter: [formatters.inputTransactionFormatter, null]\r\n        }),\r\n        new Method({\r\n            name: 'signTransaction',\r\n            call: 'personal_signTransaction',\r\n            params: 2,\r\n            inputFormatter: [formatters.inputTransactionFormatter, null]\r\n        }),\r\n        new Method({\r\n            name: 'sign',\r\n            call: 'personal_sign',\r\n            params: 3,\r\n            inputFormatter: [formatters.inputSignFormatter, formatters.inputAddressFormatter, null]\r\n        }),\r\n        new Method({\r\n            name: 'ecRecover',\r\n            call: 'personal_ecRecover',\r\n            params: 2,\r\n            inputFormatter: [formatters.inputSignFormatter, null]\r\n        })\r\n    ];\r\n    methods.forEach(function (method) {\r\n        method.attachToObject(_this);\r\n        method.setRequestManager(_this._requestManager);\r\n        method.defaultBlock = _this.defaultBlock;\r\n        method.defaultAccount = _this.defaultAccount;\r\n    });\r\n};\r\ncore.addProviders(Personal);\r\nmodule.exports = Personal;\r\n"]},"metadata":{},"sourceType":"script"}