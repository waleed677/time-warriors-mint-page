{"ast":null,"code":"export function promisify(originalFn, thisArg) {\n  const promisifiedFunction = async (...callArgs) => {\n    return new Promise((resolve, reject) => {\n      const callback = (err, data) => {\n        if (err === null || typeof err === \"undefined\") {\n          reject(err);\n        }\n\n        resolve(data);\n      };\n\n      originalFn.apply(thisArg, [...callArgs, callback]);\n    });\n  };\n\n  return promisifiedFunction;\n}\nexport function formatRpcError(error) {\n  const message = error.message || \"Failed or Rejected Request\";\n  let code = -32000;\n\n  if (error && !error.code) {\n    switch (message) {\n      case \"Parse error\":\n        code = -32700;\n        break;\n\n      case \"Invalid request\":\n        code = -32600;\n        break;\n\n      case \"Method not found\":\n        code = -32601;\n        break;\n\n      case \"Invalid params\":\n        code = -32602;\n        break;\n\n      case \"Internal error\":\n        code = -32603;\n        break;\n\n      default:\n        code = -32000;\n        break;\n    }\n  }\n\n  const result = {\n    code,\n    message\n  };\n  return result;\n}","map":{"version":3,"sources":["../../src/payload.ts"],"names":[],"mappings":"AAMA,OAAM,SAAU,SAAV,CACJ,UADI,EAEJ,OAFI,EAES;AAEb,QAAM,mBAAmB,GAAG,OAC1B,GAAG,QADuB,KAEkC;AAC5D,WAAO,IAAI,OAAJ,CAAY,CAAC,OAAD,EAAU,MAAV,KAAoB;AACrC,YAAM,QAAQ,GAAG,CACf,GADe,EAEf,IAFe,KAGb;AACF,YAAI,GAAG,KAAK,IAAR,IAAgB,OAAO,GAAP,KAAe,WAAnC,EAAgD;AAC9C,UAAA,MAAM,CAAC,GAAD,CAAN;AACD;;AACD,QAAA,OAAO,CAAC,IAAD,CAAP;AACD,OARD;;AASA,MAAA,UAAU,CAAC,KAAX,CAAiB,OAAjB,EAA0B,CAAC,GAAG,QAAJ,EAAc,QAAd,CAA1B;AACD,KAXM,CAAP;AAYD,GAfD;;AAgBA,SAAO,mBAAP;AACD;AAED,OAAM,SAAU,cAAV,CACJ,KADI,EACgC;AAEpC,QAAM,OAAO,GAAG,KAAK,CAAC,OAAN,IAAiB,4BAAjC;AACA,MAAI,IAAI,GAAG,CAAC,KAAZ;;AACA,MAAI,KAAK,IAAI,CAAC,KAAK,CAAC,IAApB,EAA0B;AACxB,YAAQ,OAAR;AACE,WAAK,aAAL;AACE,QAAA,IAAI,GAAG,CAAC,KAAR;AACA;;AACF,WAAK,iBAAL;AACE,QAAA,IAAI,GAAG,CAAC,KAAR;AACA;;AACF,WAAK,kBAAL;AACE,QAAA,IAAI,GAAG,CAAC,KAAR;AACA;;AACF,WAAK,gBAAL;AACE,QAAA,IAAI,GAAG,CAAC,KAAR;AACA;;AACF,WAAK,gBAAL;AACE,QAAA,IAAI,GAAG,CAAC,KAAR;AACA;;AACF;AACE,QAAA,IAAI,GAAG,CAAC,KAAR;AACA;AAlBJ;AAoBD;;AACD,QAAM,MAAM,GAAG;AACb,IAAA,IADa;AAEb,IAAA;AAFa,GAAf;AAIA,SAAO,MAAP;AACD","sourceRoot":"","sourcesContent":["export function promisify(originalFn, thisArg) {\r\n    const promisifiedFunction = async (...callArgs) => {\r\n        return new Promise((resolve, reject) => {\r\n            const callback = (err, data) => {\r\n                if (err === null || typeof err === \"undefined\") {\r\n                    reject(err);\r\n                }\r\n                resolve(data);\r\n            };\r\n            originalFn.apply(thisArg, [...callArgs, callback]);\r\n        });\r\n    };\r\n    return promisifiedFunction;\r\n}\r\nexport function formatRpcError(error) {\r\n    const message = error.message || \"Failed or Rejected Request\";\r\n    let code = -32000;\r\n    if (error && !error.code) {\r\n        switch (message) {\r\n            case \"Parse error\":\r\n                code = -32700;\r\n                break;\r\n            case \"Invalid request\":\r\n                code = -32600;\r\n                break;\r\n            case \"Method not found\":\r\n                code = -32601;\r\n                break;\r\n            case \"Invalid params\":\r\n                code = -32602;\r\n                break;\r\n            case \"Internal error\":\r\n                code = -32603;\r\n                break;\r\n            default:\r\n                code = -32000;\r\n                break;\r\n        }\r\n    }\r\n    const result = {\r\n        code,\r\n        message,\r\n    };\r\n    return result;\r\n}\r\n//# sourceMappingURL=payload.js.map"]},"metadata":{},"sourceType":"module"}