{"ast":null,"code":"const BaseFilter = require('./base-filter');\n\nconst getBlocksForRange = require('./getBlocksForRange');\n\nconst {\n  incrementHexInt\n} = require('./hexUtils');\n\nclass BlockFilter extends BaseFilter {\n  constructor({\n    provider,\n    params\n  }) {\n    super();\n    this.type = 'block';\n    this.provider = provider;\n  }\n\n  async update({\n    oldBlock,\n    newBlock\n  }) {\n    const toBlock = newBlock;\n    const fromBlock = incrementHexInt(oldBlock);\n    const blockBodies = await getBlocksForRange({\n      provider: this.provider,\n      fromBlock,\n      toBlock\n    });\n    const blockHashes = blockBodies.map(block => block.hash);\n    this.addResults(blockHashes);\n  }\n\n}\n\nmodule.exports = BlockFilter;","map":{"version":3,"sources":["E:/Freelancing/blockchain/time-warriors-mint-page/node_modules/eth-json-rpc-filters/block-filter.js"],"names":["BaseFilter","require","getBlocksForRange","incrementHexInt","BlockFilter","constructor","provider","params","type","update","oldBlock","newBlock","toBlock","fromBlock","blockBodies","blockHashes","map","block","hash","addResults","module","exports"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,qBAAD,CAAjC;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAsBF,OAAO,CAAC,YAAD,CAAnC;;AAEA,MAAMG,WAAN,SAA0BJ,UAA1B,CAAqC;AAEnCK,EAAAA,WAAW,CAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAF,EAAwB;AACjC;AACA,SAAKC,IAAL,GAAY,OAAZ;AACA,SAAKF,QAAL,GAAgBA,QAAhB;AACD;;AAEW,QAANG,MAAM,CAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAF,EAA0B;AACpC,UAAMC,OAAO,GAAGD,QAAhB;AACA,UAAME,SAAS,GAAGV,eAAe,CAACO,QAAD,CAAjC;AACA,UAAMI,WAAW,GAAG,MAAMZ,iBAAiB,CAAC;AAAEI,MAAAA,QAAQ,EAAE,KAAKA,QAAjB;AAA2BO,MAAAA,SAA3B;AAAsCD,MAAAA;AAAtC,KAAD,CAA3C;AACA,UAAMG,WAAW,GAAGD,WAAW,CAACE,GAAZ,CAAiBC,KAAD,IAAWA,KAAK,CAACC,IAAjC,CAApB;AACA,SAAKC,UAAL,CAAgBJ,WAAhB;AACD;;AAdkC;;AAkBrCK,MAAM,CAACC,OAAP,GAAiBjB,WAAjB","sourcesContent":["const BaseFilter = require('./base-filter')\r\nconst getBlocksForRange = require('./getBlocksForRange')\r\nconst { incrementHexInt } = require('./hexUtils')\r\n\r\nclass BlockFilter extends BaseFilter {\r\n\r\n  constructor ({ provider, params }) {\r\n    super()\r\n    this.type = 'block'\r\n    this.provider = provider\r\n  }\r\n\r\n  async update ({ oldBlock, newBlock }) {\r\n    const toBlock = newBlock\r\n    const fromBlock = incrementHexInt(oldBlock)\r\n    const blockBodies = await getBlocksForRange({ provider: this.provider, fromBlock, toBlock })\r\n    const blockHashes = blockBodies.map((block) => block.hash)\r\n    this.addResults(blockHashes)\r\n  }\r\n\r\n}\r\n\r\nmodule.exports = BlockFilter\r\n"]},"metadata":{},"sourceType":"script"}