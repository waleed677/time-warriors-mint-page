{"ast":null,"code":"const createPayload = require('../util/create-payload.js');\n\nmodule.exports = SubProvider; // this is the base class for a subprovider -- mostly helpers\n\nfunction SubProvider() {}\n\nSubProvider.prototype.setEngine = function (engine) {\n  const self = this;\n  if (self.engine) return;\n  self.engine = engine;\n  engine.on('block', function (block) {\n    self.currentBlock = block;\n  });\n  engine.on('start', function () {\n    self.start();\n  });\n  engine.on('stop', function () {\n    self.stop();\n  });\n};\n\nSubProvider.prototype.handleRequest = function (payload, next, end) {\n  throw new Error('Subproviders should override `handleRequest`.');\n};\n\nSubProvider.prototype.emitPayload = function (payload, cb) {\n  const self = this;\n  self.engine.sendAsync(createPayload(payload), cb);\n}; // dummies for overriding\n\n\nSubProvider.prototype.stop = function () {};\n\nSubProvider.prototype.start = function () {};","map":{"version":3,"sources":["E:/Freelancing/blockchain/time-warriors-mint-page/node_modules/web3-provider-engine/subproviders/subprovider.js"],"names":["createPayload","require","module","exports","SubProvider","prototype","setEngine","engine","self","on","block","currentBlock","start","stop","handleRequest","payload","next","end","Error","emitPayload","cb","sendAsync"],"mappings":"AAAA,MAAMA,aAAa,GAAGC,OAAO,CAAC,2BAAD,CAA7B;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,WAAjB,C,CAEA;;AAGA,SAASA,WAAT,GAAuB,CAEtB;;AAEDA,WAAW,CAACC,SAAZ,CAAsBC,SAAtB,GAAkC,UAASC,MAAT,EAAiB;AACjD,QAAMC,IAAI,GAAG,IAAb;AACA,MAAIA,IAAI,CAACD,MAAT,EAAiB;AACjBC,EAAAA,IAAI,CAACD,MAAL,GAAcA,MAAd;AACAA,EAAAA,MAAM,CAACE,EAAP,CAAU,OAAV,EAAmB,UAASC,KAAT,EAAgB;AACjCF,IAAAA,IAAI,CAACG,YAAL,GAAoBD,KAApB;AACD,GAFD;AAIAH,EAAAA,MAAM,CAACE,EAAP,CAAU,OAAV,EAAmB,YAAY;AAC7BD,IAAAA,IAAI,CAACI,KAAL;AACD,GAFD;AAIAL,EAAAA,MAAM,CAACE,EAAP,CAAU,MAAV,EAAkB,YAAY;AAC5BD,IAAAA,IAAI,CAACK,IAAL;AACD,GAFD;AAGD,CAfD;;AAiBAT,WAAW,CAACC,SAAZ,CAAsBS,aAAtB,GAAsC,UAASC,OAAT,EAAkBC,IAAlB,EAAwBC,GAAxB,EAA6B;AACjE,QAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;AACD,CAFD;;AAIAd,WAAW,CAACC,SAAZ,CAAsBc,WAAtB,GAAoC,UAASJ,OAAT,EAAkBK,EAAlB,EAAqB;AACvD,QAAMZ,IAAI,GAAG,IAAb;AACAA,EAAAA,IAAI,CAACD,MAAL,CAAYc,SAAZ,CAAsBrB,aAAa,CAACe,OAAD,CAAnC,EAA8CK,EAA9C;AACD,CAHD,C,CAKA;;;AAEAhB,WAAW,CAACC,SAAZ,CAAsBQ,IAAtB,GAA6B,YAAY,CAAE,CAA3C;;AAEAT,WAAW,CAACC,SAAZ,CAAsBO,KAAtB,GAA8B,YAAY,CAAE,CAA5C","sourcesContent":["const createPayload = require('../util/create-payload.js')\r\n\r\nmodule.exports = SubProvider\r\n\r\n// this is the base class for a subprovider -- mostly helpers\r\n\r\n\r\nfunction SubProvider() {\r\n\r\n}\r\n\r\nSubProvider.prototype.setEngine = function(engine) {\r\n  const self = this\r\n  if (self.engine) return\r\n  self.engine = engine\r\n  engine.on('block', function(block) {\r\n    self.currentBlock = block\r\n  })\r\n\r\n  engine.on('start', function () {\r\n    self.start()\r\n  })\r\n\r\n  engine.on('stop', function () {\r\n    self.stop()\r\n  })\r\n}\r\n\r\nSubProvider.prototype.handleRequest = function(payload, next, end) {\r\n  throw new Error('Subproviders should override `handleRequest`.')\r\n}\r\n\r\nSubProvider.prototype.emitPayload = function(payload, cb){\r\n  const self = this\r\n  self.engine.sendAsync(createPayload(payload), cb)\r\n}\r\n\r\n// dummies for overriding\r\n\r\nSubProvider.prototype.stop = function () {}\r\n\r\nSubProvider.prototype.start = function () {}\r\n"]},"metadata":{},"sourceType":"script"}